//*************************************************************************************
// Operation decoder
//*************************************************************************************


alias "alu_OP0__0" "alu_dec_and1_in_0__0; alu_dec_and3_in_0__0; alu_dec_not0_in_0__0"
alias "alu_OP0__1" "alu_dec_and1_in_0__1; alu_dec_and3_in_0__1; alu_dec_not0_in_0__1"
alias "alu_OP1__0" "alu_dec_and2_in_1__0; alu_dec_and3_in_1__0; alu_dec_not1_in_0__0"
alias "alu_OP1__1" "alu_dec_and2_in_1__1; alu_dec_and3_in_1__1; alu_dec_not1_in_0__1"
//============================================================
// NOT gate "alu_dec_not0"
//============================================================

alias "alu_dec_not0_in_0__0" "alias alu_dec_not0_output alu_dec_not0_out__1"
alias "alu_dec_not0_in_0__1" "alias alu_dec_not0_output alu_dec_not0_out__0"

alias "alu_dec_not0_output" ""

alias "alu_dec_not0_out__0" "alu_dec_and0_in_0__0; alu_dec_and2_in_0__0"
alias "alu_dec_not0_out__1" "alu_dec_and0_in_0__1; alu_dec_and2_in_0__1"

alias "alu_dec_not0_tick" "alu_dec_not0_output"
alias "alu_dec_not0_tickrecurse" ""
alias "alu_dec_not0_rcl" "alias alu_dec_not0_execute ; alu_dec_not0_tickrecurse; alu_dec_not0_tick; alias alu_dec_not0_execute alu_dec_not0_rcl"
alias "alu_dec_not0_execute" "alu_dec_not0_rcl"


//============================================================
// NOT gate "alu_dec_not1"
//============================================================

alias "alu_dec_not1_in_0__0" "alias alu_dec_not1_output alu_dec_not1_out__1"
alias "alu_dec_not1_in_0__1" "alias alu_dec_not1_output alu_dec_not1_out__0"

alias "alu_dec_not1_output" ""

alias "alu_dec_not1_out__0" "alu_dec_and0_in_1__0; alu_dec_and1_in_1__0"
alias "alu_dec_not1_out__1" "alu_dec_and0_in_1__1; alu_dec_and1_in_1__1"

alias "alu_dec_not1_tick" "alu_dec_not1_output"
alias "alu_dec_not1_tickrecurse" ""
alias "alu_dec_not1_rcl" "alias alu_dec_not1_execute ; alu_dec_not1_tickrecurse; alu_dec_not1_tick; alias alu_dec_not1_execute alu_dec_not1_rcl"
alias "alu_dec_not1_execute" "alu_dec_not1_rcl"


//============================================================
// AND gate "alu_dec_and0"
//============================================================

alias "alu_dec_and0_in_0__0" "alias alu_dec_and0_output alu_dec_and0_out__0"
alias "alu_dec_and0_in_0__1" "alias alu_dec_and0_output alu_dec_and0_stage1"

alias "alu_dec_and0_stage1" "alu_dec_and0_out__0"

alias "alu_dec_and0_in_1__0" "alias alu_dec_and0_stage1 alu_dec_and0_out__0"
alias "alu_dec_and0_in_1__1" "alias alu_dec_and0_stage1 alu_dec_and0_out__1"

alias "alu_dec_and0_output" ""

alias "alu_dec_and0_out__0" "alu0_op0_in_0__0; alu1_op0_in_0__0; alu2_op0_in_0__0; alu3_op0_in_0__0; alu4_op0_in_0__0; alu5_op0_in_0__0; alu6_op0_in_0__0; alu7_op0_in_0__0"
alias "alu_dec_and0_out__1" "alu0_op0_in_0__1; alu1_op0_in_0__1; alu2_op0_in_0__1; alu3_op0_in_0__1; alu4_op0_in_0__1; alu5_op0_in_0__1; alu6_op0_in_0__1; alu7_op0_in_0__1"

alias "alu_dec_and0_tick" "alu_dec_and0_output"
alias "alu_dec_and0_tickrecurse" "alu_dec_not0_execute; alu_dec_not1_execute"
alias "alu_dec_and0_rcl" "alias alu_dec_and0_execute ; alu_dec_and0_tickrecurse; alu_dec_and0_tick; alias alu_dec_and0_execute alu_dec_and0_rcl"
alias "alu_dec_and0_execute" "alu_dec_and0_rcl"


//============================================================
// AND gate "alu_dec_and1"
//============================================================

alias "alu_dec_and1_in_0__0" "alias alu_dec_and1_output alu_dec_and1_out__0"
alias "alu_dec_and1_in_0__1" "alias alu_dec_and1_output alu_dec_and1_stage1"

alias "alu_dec_and1_stage1" "alu_dec_and1_out__0"

alias "alu_dec_and1_in_1__0" "alias alu_dec_and1_stage1 alu_dec_and1_out__0"
alias "alu_dec_and1_in_1__1" "alias alu_dec_and1_stage1 alu_dec_and1_out__1"

alias "alu_dec_and1_output" ""

alias "alu_dec_and1_out__0" "alu0_op1_in_0__0; alu1_op1_in_0__0; alu2_op1_in_0__0; alu3_op1_in_0__0; alu4_op1_in_0__0; alu5_op1_in_0__0; alu6_op1_in_0__0; alu7_op1_in_0__0"
alias "alu_dec_and1_out__1" "alu0_op1_in_0__1; alu1_op1_in_0__1; alu2_op1_in_0__1; alu3_op1_in_0__1; alu4_op1_in_0__1; alu5_op1_in_0__1; alu6_op1_in_0__1; alu7_op1_in_0__1"

alias "alu_dec_and1_tick" "alu_dec_and1_output"
alias "alu_dec_and1_tickrecurse" "alu_dec_not1_execute"
alias "alu_dec_and1_rcl" "alias alu_dec_and1_execute ; alu_dec_and1_tickrecurse; alu_dec_and1_tick; alias alu_dec_and1_execute alu_dec_and1_rcl"
alias "alu_dec_and1_execute" "alu_dec_and1_rcl"


//============================================================
// AND gate "alu_dec_and2"
//============================================================

alias "alu_dec_and2_in_0__0" "alias alu_dec_and2_output alu_dec_and2_out__0"
alias "alu_dec_and2_in_0__1" "alias alu_dec_and2_output alu_dec_and2_stage1"

alias "alu_dec_and2_stage1" "alu_dec_and2_out__0"

alias "alu_dec_and2_in_1__0" "alias alu_dec_and2_stage1 alu_dec_and2_out__0"
alias "alu_dec_and2_in_1__1" "alias alu_dec_and2_stage1 alu_dec_and2_out__1"

alias "alu_dec_and2_output" ""

alias "alu_dec_and2_out__0" "alu0_op2_in_0__0; alu1_op2_in_0__0; alu2_op2_in_0__0; alu3_op2_in_0__0; alu4_op2_in_0__0; alu5_op2_in_0__0; alu6_op2_in_0__0; alu7_op2_in_0__0"
alias "alu_dec_and2_out__1" "alu0_op2_in_0__1; alu1_op2_in_0__1; alu2_op2_in_0__1; alu3_op2_in_0__1; alu4_op2_in_0__1; alu5_op2_in_0__1; alu6_op2_in_0__1; alu7_op2_in_0__1"

alias "alu_dec_and2_tick" "alu_dec_and2_output"
alias "alu_dec_and2_tickrecurse" "alu_dec_not0_execute"
alias "alu_dec_and2_rcl" "alias alu_dec_and2_execute ; alu_dec_and2_tickrecurse; alu_dec_and2_tick; alias alu_dec_and2_execute alu_dec_and2_rcl"
alias "alu_dec_and2_execute" "alu_dec_and2_rcl"


//============================================================
// AND gate "alu_dec_and3"
//============================================================

alias "alu_dec_and3_in_0__0" "alias alu_dec_and3_output alu_dec_and3_out__0"
alias "alu_dec_and3_in_0__1" "alias alu_dec_and3_output alu_dec_and3_stage1"

alias "alu_dec_and3_stage1" "alu_dec_and3_out__0"

alias "alu_dec_and3_in_1__0" "alias alu_dec_and3_stage1 alu_dec_and3_out__0"
alias "alu_dec_and3_in_1__1" "alias alu_dec_and3_stage1 alu_dec_and3_out__1"

alias "alu_dec_and3_output" ""

alias "alu_dec_and3_out__0" "alu0_op3_in_0__0; alu1_op3_in_0__0; alu2_op3_in_0__0; alu3_op3_in_0__0; alu4_op3_in_0__0; alu5_op3_in_0__0; alu6_op3_in_0__0; alu7_op3_in_0__0"
alias "alu_dec_and3_out__1" "alu0_op3_in_0__1; alu1_op3_in_0__1; alu2_op3_in_0__1; alu3_op3_in_0__1; alu4_op3_in_0__1; alu5_op3_in_0__1; alu6_op3_in_0__1; alu7_op3_in_0__1"

alias "alu_dec_and3_tick" "alu_dec_and3_output"
alias "alu_dec_and3_tickrecurse" ""
alias "alu_dec_and3_rcl" "alias alu_dec_and3_execute ; alu_dec_and3_tickrecurse; alu_dec_and3_tick; alias alu_dec_and3_execute alu_dec_and3_rcl"
alias "alu_dec_and3_execute" "alu_dec_and3_rcl"


alias "alu0_A__0" "alu0_fa_xor0_in_0__0; alu0_fa_and1_in_0__0; alu0_land_in_0__0; alu0_lor_in_0__0; alu0_lxor_in_0__0"
alias "alu0_A__1" "alu0_fa_xor0_in_0__1; alu0_fa_and1_in_0__1; alu0_land_in_0__1; alu0_lor_in_0__1; alu0_lxor_in_0__1"
alias "alu0_B__0" "alu0_fa_xor0_in_1__0; alu0_fa_and1_in_1__0; alu0_land_in_1__0; alu0_lor_in_1__0; alu0_lxor_in_1__0"
alias "alu0_B__1" "alu0_fa_xor0_in_1__1; alu0_fa_and1_in_1__1; alu0_land_in_1__1; alu0_lor_in_1__1; alu0_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 0 (8 total)
//*************************************************************************************


alias "alu0_Cin__0" "alu0_fa_xor1_in_1__0; alu0_fa_and0_in_1__0"
alias "alu0_Cin__1" "alu0_fa_xor1_in_1__1; alu0_fa_and0_in_1__1"
//============================================================
// XOR gate "alu0_fa_xor0"
//============================================================

alias "alu0_fa_xor0_in_0__0" "alias alu0_fa_xor0_output alu0_fa_xor0_stage1"
alias "alu0_fa_xor0_in_0__1" "alias alu0_fa_xor0_output alu0_fa_xor0_stage2"

alias "alu0_fa_xor0_stage1" "alu0_fa_xor0_out__0"

alias "alu0_fa_xor0_stage2" "alu0_fa_xor0_out__1"

alias "alu0_fa_xor0_in_1__0" "alias alu0_fa_xor0_stage1 alu0_fa_xor0_out__0; alias alu0_fa_xor0_stage2 alu0_fa_xor0_out__1"
alias "alu0_fa_xor0_in_1__1" "alias alu0_fa_xor0_stage1 alu0_fa_xor0_out__1; alias alu0_fa_xor0_stage2 alu0_fa_xor0_out__0"

alias "alu0_fa_xor0_output" ""

alias "alu0_fa_xor0_out__0" "alu0_fa_xor1_in_0__0; alu0_fa_and0_in_0__0"
alias "alu0_fa_xor0_out__1" "alu0_fa_xor1_in_0__1; alu0_fa_and0_in_0__1"

alias "alu0_fa_xor0_tick" "alu0_fa_xor0_output"
alias "alu0_fa_xor0_tickrecurse" ""
alias "alu0_fa_xor0_rcl" "alias alu0_fa_xor0_execute ; alu0_fa_xor0_tickrecurse; alu0_fa_xor0_tick; alias alu0_fa_xor0_execute alu0_fa_xor0_rcl"
alias "alu0_fa_xor0_execute" "alu0_fa_xor0_rcl"


//============================================================
// XOR gate "alu0_fa_xor1"
//============================================================

alias "alu0_fa_xor1_in_0__0" "alias alu0_fa_xor1_output alu0_fa_xor1_stage1"
alias "alu0_fa_xor1_in_0__1" "alias alu0_fa_xor1_output alu0_fa_xor1_stage2"

alias "alu0_fa_xor1_stage1" "alu0_fa_xor1_out__0"

alias "alu0_fa_xor1_stage2" "alu0_fa_xor1_out__1"

alias "alu0_fa_xor1_in_1__0" "alias alu0_fa_xor1_stage1 alu0_fa_xor1_out__0; alias alu0_fa_xor1_stage2 alu0_fa_xor1_out__1"
alias "alu0_fa_xor1_in_1__1" "alias alu0_fa_xor1_stage1 alu0_fa_xor1_out__1; alias alu0_fa_xor1_stage2 alu0_fa_xor1_out__0"

alias "alu0_fa_xor1_output" ""

alias "alu0_fa_xor1_out__0" "alu0_op0_in_1__0"
alias "alu0_fa_xor1_out__1" "alu0_op0_in_1__1"

alias "alu0_fa_xor1_tick" "alu0_fa_xor1_output"
alias "alu0_fa_xor1_tickrecurse" "alu0_fa_xor0_execute"
alias "alu0_fa_xor1_rcl" "alias alu0_fa_xor1_execute ; alu0_fa_xor1_tickrecurse; alu0_fa_xor1_tick; alias alu0_fa_xor1_execute alu0_fa_xor1_rcl"
alias "alu0_fa_xor1_execute" "alu0_fa_xor1_rcl"


//============================================================
// AND gate "alu0_fa_and0"
//============================================================

alias "alu0_fa_and0_in_0__0" "alias alu0_fa_and0_output alu0_fa_and0_out__0"
alias "alu0_fa_and0_in_0__1" "alias alu0_fa_and0_output alu0_fa_and0_stage1"

alias "alu0_fa_and0_stage1" "alu0_fa_and0_out__0"

alias "alu0_fa_and0_in_1__0" "alias alu0_fa_and0_stage1 alu0_fa_and0_out__0"
alias "alu0_fa_and0_in_1__1" "alias alu0_fa_and0_stage1 alu0_fa_and0_out__1"

alias "alu0_fa_and0_output" ""

alias "alu0_fa_and0_out__0" "alu0_fa_or_in_0__0"
alias "alu0_fa_and0_out__1" "alu0_fa_or_in_0__1"

alias "alu0_fa_and0_tick" "alu0_fa_and0_output"
alias "alu0_fa_and0_tickrecurse" "alu0_fa_xor0_execute"
alias "alu0_fa_and0_rcl" "alias alu0_fa_and0_execute ; alu0_fa_and0_tickrecurse; alu0_fa_and0_tick; alias alu0_fa_and0_execute alu0_fa_and0_rcl"
alias "alu0_fa_and0_execute" "alu0_fa_and0_rcl"


//============================================================
// AND gate "alu0_fa_and1"
//============================================================

alias "alu0_fa_and1_in_0__0" "alias alu0_fa_and1_output alu0_fa_and1_out__0"
alias "alu0_fa_and1_in_0__1" "alias alu0_fa_and1_output alu0_fa_and1_stage1"

alias "alu0_fa_and1_stage1" "alu0_fa_and1_out__0"

alias "alu0_fa_and1_in_1__0" "alias alu0_fa_and1_stage1 alu0_fa_and1_out__0"
alias "alu0_fa_and1_in_1__1" "alias alu0_fa_and1_stage1 alu0_fa_and1_out__1"

alias "alu0_fa_and1_output" ""

alias "alu0_fa_and1_out__0" "alu0_fa_or_in_1__0"
alias "alu0_fa_and1_out__1" "alu0_fa_or_in_1__1"

alias "alu0_fa_and1_tick" "alu0_fa_and1_output"
alias "alu0_fa_and1_tickrecurse" ""
alias "alu0_fa_and1_rcl" "alias alu0_fa_and1_execute ; alu0_fa_and1_tickrecurse; alu0_fa_and1_tick; alias alu0_fa_and1_execute alu0_fa_and1_rcl"
alias "alu0_fa_and1_execute" "alu0_fa_and1_rcl"


//============================================================
// OR gate "alu0_fa_or"
//============================================================

alias "alu0_fa_or_in_0__0" "alias alu0_fa_or_output alu0_fa_or_stage1"
alias "alu0_fa_or_in_0__1" "alias alu0_fa_or_output alu0_fa_or_out__1"

alias "alu0_fa_or_stage1" "alu0_fa_or_out__0"

alias "alu0_fa_or_in_1__0" "alias alu0_fa_or_stage1 alu0_fa_or_out__0"
alias "alu0_fa_or_in_1__1" "alias alu0_fa_or_stage1 alu0_fa_or_out__1"

alias "alu0_fa_or_output" ""

alias "alu0_fa_or_out__0" "alu1_fa_xor1_in_1__0; alu1_fa_and0_in_1__0"
alias "alu0_fa_or_out__1" "alu1_fa_xor1_in_1__1; alu1_fa_and0_in_1__1"

alias "alu0_fa_or_tick" "alu0_fa_or_output"
alias "alu0_fa_or_tickrecurse" "alu0_fa_and0_execute; alu0_fa_and1_execute"
alias "alu0_fa_or_rcl" "alias alu0_fa_or_execute ; alu0_fa_or_tickrecurse; alu0_fa_or_tick; alias alu0_fa_or_execute alu0_fa_or_rcl"
alias "alu0_fa_or_execute" "alu0_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 0 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu0_land"
//============================================================

alias "alu0_land_in_0__0" "alias alu0_land_output alu0_land_out__0"
alias "alu0_land_in_0__1" "alias alu0_land_output alu0_land_stage1"

alias "alu0_land_stage1" "alu0_land_out__0"

alias "alu0_land_in_1__0" "alias alu0_land_stage1 alu0_land_out__0"
alias "alu0_land_in_1__1" "alias alu0_land_stage1 alu0_land_out__1"

alias "alu0_land_output" ""

alias "alu0_land_out__0" "alu0_op1_in_1__0"
alias "alu0_land_out__1" "alu0_op1_in_1__1"

alias "alu0_land_tick" "alu0_land_output"
alias "alu0_land_tickrecurse" ""
alias "alu0_land_rcl" "alias alu0_land_execute ; alu0_land_tickrecurse; alu0_land_tick; alias alu0_land_execute alu0_land_rcl"
alias "alu0_land_execute" "alu0_land_rcl"


//============================================================
// OR gate "alu0_lor"
//============================================================

alias "alu0_lor_in_0__0" "alias alu0_lor_output alu0_lor_stage1"
alias "alu0_lor_in_0__1" "alias alu0_lor_output alu0_lor_out__1"

alias "alu0_lor_stage1" "alu0_lor_out__0"

alias "alu0_lor_in_1__0" "alias alu0_lor_stage1 alu0_lor_out__0"
alias "alu0_lor_in_1__1" "alias alu0_lor_stage1 alu0_lor_out__1"

alias "alu0_lor_output" ""

alias "alu0_lor_out__0" "alu0_op2_in_1__0"
alias "alu0_lor_out__1" "alu0_op2_in_1__1"

alias "alu0_lor_tick" "alu0_lor_output"
alias "alu0_lor_tickrecurse" ""
alias "alu0_lor_rcl" "alias alu0_lor_execute ; alu0_lor_tickrecurse; alu0_lor_tick; alias alu0_lor_execute alu0_lor_rcl"
alias "alu0_lor_execute" "alu0_lor_rcl"


//============================================================
// XOR gate "alu0_lxor"
//============================================================

alias "alu0_lxor_in_0__0" "alias alu0_lxor_output alu0_lxor_stage1"
alias "alu0_lxor_in_0__1" "alias alu0_lxor_output alu0_lxor_stage2"

alias "alu0_lxor_stage1" "alu0_lxor_out__0"

alias "alu0_lxor_stage2" "alu0_lxor_out__1"

alias "alu0_lxor_in_1__0" "alias alu0_lxor_stage1 alu0_lxor_out__0; alias alu0_lxor_stage2 alu0_lxor_out__1"
alias "alu0_lxor_in_1__1" "alias alu0_lxor_stage1 alu0_lxor_out__1; alias alu0_lxor_stage2 alu0_lxor_out__0"

alias "alu0_lxor_output" ""

alias "alu0_lxor_out__0" "alu0_op3_in_1__0"
alias "alu0_lxor_out__1" "alu0_op3_in_1__1"

alias "alu0_lxor_tick" "alu0_lxor_output"
alias "alu0_lxor_tickrecurse" ""
alias "alu0_lxor_rcl" "alias alu0_lxor_execute ; alu0_lxor_tickrecurse; alu0_lxor_tick; alias alu0_lxor_execute alu0_lxor_rcl"
alias "alu0_lxor_execute" "alu0_lxor_rcl"


//*************************************************************************************
// Op selector for bit 0 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu0_op0"
//============================================================

alias "alu0_op0_in_0__0" "alias alu0_op0_output alu0_op0_out__0"
alias "alu0_op0_in_0__1" "alias alu0_op0_output alu0_op0_stage1"

alias "alu0_op0_stage1" "alu0_op0_out__0"

alias "alu0_op0_in_1__0" "alias alu0_op0_stage1 alu0_op0_out__0"
alias "alu0_op0_in_1__1" "alias alu0_op0_stage1 alu0_op0_out__1"

alias "alu0_op0_output" ""

alias "alu0_op0_out__0" "alu0_opj_in_0__0"
alias "alu0_op0_out__1" "alu0_opj_in_0__1"

alias "alu0_op0_tick" "alu0_op0_output"
alias "alu0_op0_tickrecurse" "alu_dec_and0_execute; alu0_fa_xor1_execute"
alias "alu0_op0_rcl" "alias alu0_op0_execute ; alu0_op0_tickrecurse; alu0_op0_tick; alias alu0_op0_execute alu0_op0_rcl"
alias "alu0_op0_execute" "alu0_op0_rcl"


//============================================================
// AND gate "alu0_op1"
//============================================================

alias "alu0_op1_in_0__0" "alias alu0_op1_output alu0_op1_out__0"
alias "alu0_op1_in_0__1" "alias alu0_op1_output alu0_op1_stage1"

alias "alu0_op1_stage1" "alu0_op1_out__0"

alias "alu0_op1_in_1__0" "alias alu0_op1_stage1 alu0_op1_out__0"
alias "alu0_op1_in_1__1" "alias alu0_op1_stage1 alu0_op1_out__1"

alias "alu0_op1_output" ""

alias "alu0_op1_out__0" "alu0_opj_in_1__0"
alias "alu0_op1_out__1" "alu0_opj_in_1__1"

alias "alu0_op1_tick" "alu0_op1_output"
alias "alu0_op1_tickrecurse" "alu_dec_and1_execute; alu0_land_execute"
alias "alu0_op1_rcl" "alias alu0_op1_execute ; alu0_op1_tickrecurse; alu0_op1_tick; alias alu0_op1_execute alu0_op1_rcl"
alias "alu0_op1_execute" "alu0_op1_rcl"


//============================================================
// AND gate "alu0_op2"
//============================================================

alias "alu0_op2_in_0__0" "alias alu0_op2_output alu0_op2_out__0"
alias "alu0_op2_in_0__1" "alias alu0_op2_output alu0_op2_stage1"

alias "alu0_op2_stage1" "alu0_op2_out__0"

alias "alu0_op2_in_1__0" "alias alu0_op2_stage1 alu0_op2_out__0"
alias "alu0_op2_in_1__1" "alias alu0_op2_stage1 alu0_op2_out__1"

alias "alu0_op2_output" ""

alias "alu0_op2_out__0" "alu0_opj_in_2__0"
alias "alu0_op2_out__1" "alu0_opj_in_2__1"

alias "alu0_op2_tick" "alu0_op2_output"
alias "alu0_op2_tickrecurse" "alu_dec_and2_execute; alu0_lor_execute"
alias "alu0_op2_rcl" "alias alu0_op2_execute ; alu0_op2_tickrecurse; alu0_op2_tick; alias alu0_op2_execute alu0_op2_rcl"
alias "alu0_op2_execute" "alu0_op2_rcl"


//============================================================
// AND gate "alu0_op3"
//============================================================

alias "alu0_op3_in_0__0" "alias alu0_op3_output alu0_op3_out__0"
alias "alu0_op3_in_0__1" "alias alu0_op3_output alu0_op3_stage1"

alias "alu0_op3_stage1" "alu0_op3_out__0"

alias "alu0_op3_in_1__0" "alias alu0_op3_stage1 alu0_op3_out__0"
alias "alu0_op3_in_1__1" "alias alu0_op3_stage1 alu0_op3_out__1"

alias "alu0_op3_output" ""

alias "alu0_op3_out__0" "alu0_opj_in_3__0"
alias "alu0_op3_out__1" "alu0_opj_in_3__1"

alias "alu0_op3_tick" "alu0_op3_output"
alias "alu0_op3_tickrecurse" "alu_dec_and3_execute; alu0_lxor_execute"
alias "alu0_op3_rcl" "alias alu0_op3_execute ; alu0_op3_tickrecurse; alu0_op3_tick; alias alu0_op3_execute alu0_op3_rcl"
alias "alu0_op3_execute" "alu0_op3_rcl"


//============================================================
// OR4 gate "alu0_opj"
//============================================================

alias "alu0_opj_in_0__0" "alias alu0_opj_output alu0_opj_stage1"
alias "alu0_opj_in_0__1" "alias alu0_opj_output alu0_opj_out__1"

alias "alu0_opj_stage1" "alu0_opj_out__0"

alias "alu0_opj_in_1__0" "alias alu0_opj_stage1 alu0_opj_stage2"
alias "alu0_opj_in_1__1" "alias alu0_opj_stage1 alu0_opj_out__1"

alias "alu0_opj_stage2" "alu0_opj_out__0"

alias "alu0_opj_in_2__0" "alias alu0_opj_stage2 alu0_opj_stage3"
alias "alu0_opj_in_2__1" "alias alu0_opj_stage2 alu0_opj_out__1"

alias "alu0_opj_stage3" "alu0_opj_out__0"

alias "alu0_opj_in_3__0" "alias alu0_opj_stage3 alu0_opj_out__0"
alias "alu0_opj_in_3__1" "alias alu0_opj_stage3 alu0_opj_out__1"

alias "alu0_opj_output" ""

alias "alu0_opj_out__0" "echo S[0] = 0"
alias "alu0_opj_out__1" "echo S[0] = 1"

alias "alu0_opj_tick" "alu0_opj_output"
alias "alu0_opj_tickrecurse" "alu0_op0_execute; alu0_op1_execute; alu0_op2_execute; alu0_op3_execute"
alias "alu0_opj_rcl" "alias alu0_opj_execute ; alu0_opj_tickrecurse; alu0_opj_tick; alias alu0_opj_execute alu0_opj_rcl"
alias "alu0_opj_execute" "alu0_opj_rcl"


alias "alu1_A__0" "alu1_fa_xor0_in_0__0; alu1_fa_and1_in_0__0; alu1_land_in_0__0; alu1_lor_in_0__0; alu1_lxor_in_0__0"
alias "alu1_A__1" "alu1_fa_xor0_in_0__1; alu1_fa_and1_in_0__1; alu1_land_in_0__1; alu1_lor_in_0__1; alu1_lxor_in_0__1"
alias "alu1_B__0" "alu1_fa_xor0_in_1__0; alu1_fa_and1_in_1__0; alu1_land_in_1__0; alu1_lor_in_1__0; alu1_lxor_in_1__0"
alias "alu1_B__1" "alu1_fa_xor0_in_1__1; alu1_fa_and1_in_1__1; alu1_land_in_1__1; alu1_lor_in_1__1; alu1_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 1 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu1_fa_xor0"
//============================================================

alias "alu1_fa_xor0_in_0__0" "alias alu1_fa_xor0_output alu1_fa_xor0_stage1"
alias "alu1_fa_xor0_in_0__1" "alias alu1_fa_xor0_output alu1_fa_xor0_stage2"

alias "alu1_fa_xor0_stage1" "alu1_fa_xor0_out__0"

alias "alu1_fa_xor0_stage2" "alu1_fa_xor0_out__1"

alias "alu1_fa_xor0_in_1__0" "alias alu1_fa_xor0_stage1 alu1_fa_xor0_out__0; alias alu1_fa_xor0_stage2 alu1_fa_xor0_out__1"
alias "alu1_fa_xor0_in_1__1" "alias alu1_fa_xor0_stage1 alu1_fa_xor0_out__1; alias alu1_fa_xor0_stage2 alu1_fa_xor0_out__0"

alias "alu1_fa_xor0_output" ""

alias "alu1_fa_xor0_out__0" "alu1_fa_xor1_in_0__0; alu1_fa_and0_in_0__0"
alias "alu1_fa_xor0_out__1" "alu1_fa_xor1_in_0__1; alu1_fa_and0_in_0__1"

alias "alu1_fa_xor0_tick" "alu1_fa_xor0_output"
alias "alu1_fa_xor0_tickrecurse" ""
alias "alu1_fa_xor0_rcl" "alias alu1_fa_xor0_execute ; alu1_fa_xor0_tickrecurse; alu1_fa_xor0_tick; alias alu1_fa_xor0_execute alu1_fa_xor0_rcl"
alias "alu1_fa_xor0_execute" "alu1_fa_xor0_rcl"


//============================================================
// XOR gate "alu1_fa_xor1"
//============================================================

alias "alu1_fa_xor1_in_0__0" "alias alu1_fa_xor1_output alu1_fa_xor1_stage1"
alias "alu1_fa_xor1_in_0__1" "alias alu1_fa_xor1_output alu1_fa_xor1_stage2"

alias "alu1_fa_xor1_stage1" "alu1_fa_xor1_out__0"

alias "alu1_fa_xor1_stage2" "alu1_fa_xor1_out__1"

alias "alu1_fa_xor1_in_1__0" "alias alu1_fa_xor1_stage1 alu1_fa_xor1_out__0; alias alu1_fa_xor1_stage2 alu1_fa_xor1_out__1"
alias "alu1_fa_xor1_in_1__1" "alias alu1_fa_xor1_stage1 alu1_fa_xor1_out__1; alias alu1_fa_xor1_stage2 alu1_fa_xor1_out__0"

alias "alu1_fa_xor1_output" ""

alias "alu1_fa_xor1_out__0" "alu1_op0_in_1__0"
alias "alu1_fa_xor1_out__1" "alu1_op0_in_1__1"

alias "alu1_fa_xor1_tick" "alu1_fa_xor1_output"
alias "alu1_fa_xor1_tickrecurse" "alu1_fa_xor0_execute; alu0_fa_or_execute"
alias "alu1_fa_xor1_rcl" "alias alu1_fa_xor1_execute ; alu1_fa_xor1_tickrecurse; alu1_fa_xor1_tick; alias alu1_fa_xor1_execute alu1_fa_xor1_rcl"
alias "alu1_fa_xor1_execute" "alu1_fa_xor1_rcl"


//============================================================
// AND gate "alu1_fa_and0"
//============================================================

alias "alu1_fa_and0_in_0__0" "alias alu1_fa_and0_output alu1_fa_and0_out__0"
alias "alu1_fa_and0_in_0__1" "alias alu1_fa_and0_output alu1_fa_and0_stage1"

alias "alu1_fa_and0_stage1" "alu1_fa_and0_out__0"

alias "alu1_fa_and0_in_1__0" "alias alu1_fa_and0_stage1 alu1_fa_and0_out__0"
alias "alu1_fa_and0_in_1__1" "alias alu1_fa_and0_stage1 alu1_fa_and0_out__1"

alias "alu1_fa_and0_output" ""

alias "alu1_fa_and0_out__0" "alu1_fa_or_in_0__0"
alias "alu1_fa_and0_out__1" "alu1_fa_or_in_0__1"

alias "alu1_fa_and0_tick" "alu1_fa_and0_output"
alias "alu1_fa_and0_tickrecurse" "alu1_fa_xor0_execute; alu0_fa_or_execute"
alias "alu1_fa_and0_rcl" "alias alu1_fa_and0_execute ; alu1_fa_and0_tickrecurse; alu1_fa_and0_tick; alias alu1_fa_and0_execute alu1_fa_and0_rcl"
alias "alu1_fa_and0_execute" "alu1_fa_and0_rcl"


//============================================================
// AND gate "alu1_fa_and1"
//============================================================

alias "alu1_fa_and1_in_0__0" "alias alu1_fa_and1_output alu1_fa_and1_out__0"
alias "alu1_fa_and1_in_0__1" "alias alu1_fa_and1_output alu1_fa_and1_stage1"

alias "alu1_fa_and1_stage1" "alu1_fa_and1_out__0"

alias "alu1_fa_and1_in_1__0" "alias alu1_fa_and1_stage1 alu1_fa_and1_out__0"
alias "alu1_fa_and1_in_1__1" "alias alu1_fa_and1_stage1 alu1_fa_and1_out__1"

alias "alu1_fa_and1_output" ""

alias "alu1_fa_and1_out__0" "alu1_fa_or_in_1__0"
alias "alu1_fa_and1_out__1" "alu1_fa_or_in_1__1"

alias "alu1_fa_and1_tick" "alu1_fa_and1_output"
alias "alu1_fa_and1_tickrecurse" ""
alias "alu1_fa_and1_rcl" "alias alu1_fa_and1_execute ; alu1_fa_and1_tickrecurse; alu1_fa_and1_tick; alias alu1_fa_and1_execute alu1_fa_and1_rcl"
alias "alu1_fa_and1_execute" "alu1_fa_and1_rcl"


//============================================================
// OR gate "alu1_fa_or"
//============================================================

alias "alu1_fa_or_in_0__0" "alias alu1_fa_or_output alu1_fa_or_stage1"
alias "alu1_fa_or_in_0__1" "alias alu1_fa_or_output alu1_fa_or_out__1"

alias "alu1_fa_or_stage1" "alu1_fa_or_out__0"

alias "alu1_fa_or_in_1__0" "alias alu1_fa_or_stage1 alu1_fa_or_out__0"
alias "alu1_fa_or_in_1__1" "alias alu1_fa_or_stage1 alu1_fa_or_out__1"

alias "alu1_fa_or_output" ""

alias "alu1_fa_or_out__0" "alu2_fa_xor1_in_1__0; alu2_fa_and0_in_1__0"
alias "alu1_fa_or_out__1" "alu2_fa_xor1_in_1__1; alu2_fa_and0_in_1__1"

alias "alu1_fa_or_tick" "alu1_fa_or_output"
alias "alu1_fa_or_tickrecurse" "alu1_fa_and0_execute; alu1_fa_and1_execute"
alias "alu1_fa_or_rcl" "alias alu1_fa_or_execute ; alu1_fa_or_tickrecurse; alu1_fa_or_tick; alias alu1_fa_or_execute alu1_fa_or_rcl"
alias "alu1_fa_or_execute" "alu1_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 1 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu1_land"
//============================================================

alias "alu1_land_in_0__0" "alias alu1_land_output alu1_land_out__0"
alias "alu1_land_in_0__1" "alias alu1_land_output alu1_land_stage1"

alias "alu1_land_stage1" "alu1_land_out__0"

alias "alu1_land_in_1__0" "alias alu1_land_stage1 alu1_land_out__0"
alias "alu1_land_in_1__1" "alias alu1_land_stage1 alu1_land_out__1"

alias "alu1_land_output" ""

alias "alu1_land_out__0" "alu1_op1_in_1__0"
alias "alu1_land_out__1" "alu1_op1_in_1__1"

alias "alu1_land_tick" "alu1_land_output"
alias "alu1_land_tickrecurse" ""
alias "alu1_land_rcl" "alias alu1_land_execute ; alu1_land_tickrecurse; alu1_land_tick; alias alu1_land_execute alu1_land_rcl"
alias "alu1_land_execute" "alu1_land_rcl"


//============================================================
// OR gate "alu1_lor"
//============================================================

alias "alu1_lor_in_0__0" "alias alu1_lor_output alu1_lor_stage1"
alias "alu1_lor_in_0__1" "alias alu1_lor_output alu1_lor_out__1"

alias "alu1_lor_stage1" "alu1_lor_out__0"

alias "alu1_lor_in_1__0" "alias alu1_lor_stage1 alu1_lor_out__0"
alias "alu1_lor_in_1__1" "alias alu1_lor_stage1 alu1_lor_out__1"

alias "alu1_lor_output" ""

alias "alu1_lor_out__0" "alu1_op2_in_1__0"
alias "alu1_lor_out__1" "alu1_op2_in_1__1"

alias "alu1_lor_tick" "alu1_lor_output"
alias "alu1_lor_tickrecurse" ""
alias "alu1_lor_rcl" "alias alu1_lor_execute ; alu1_lor_tickrecurse; alu1_lor_tick; alias alu1_lor_execute alu1_lor_rcl"
alias "alu1_lor_execute" "alu1_lor_rcl"


//============================================================
// XOR gate "alu1_lxor"
//============================================================

alias "alu1_lxor_in_0__0" "alias alu1_lxor_output alu1_lxor_stage1"
alias "alu1_lxor_in_0__1" "alias alu1_lxor_output alu1_lxor_stage2"

alias "alu1_lxor_stage1" "alu1_lxor_out__0"

alias "alu1_lxor_stage2" "alu1_lxor_out__1"

alias "alu1_lxor_in_1__0" "alias alu1_lxor_stage1 alu1_lxor_out__0; alias alu1_lxor_stage2 alu1_lxor_out__1"
alias "alu1_lxor_in_1__1" "alias alu1_lxor_stage1 alu1_lxor_out__1; alias alu1_lxor_stage2 alu1_lxor_out__0"

alias "alu1_lxor_output" ""

alias "alu1_lxor_out__0" "alu1_op3_in_1__0"
alias "alu1_lxor_out__1" "alu1_op3_in_1__1"

alias "alu1_lxor_tick" "alu1_lxor_output"
alias "alu1_lxor_tickrecurse" ""
alias "alu1_lxor_rcl" "alias alu1_lxor_execute ; alu1_lxor_tickrecurse; alu1_lxor_tick; alias alu1_lxor_execute alu1_lxor_rcl"
alias "alu1_lxor_execute" "alu1_lxor_rcl"


//*************************************************************************************
// Op selector for bit 1 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu1_op0"
//============================================================

alias "alu1_op0_in_0__0" "alias alu1_op0_output alu1_op0_out__0"
alias "alu1_op0_in_0__1" "alias alu1_op0_output alu1_op0_stage1"

alias "alu1_op0_stage1" "alu1_op0_out__0"

alias "alu1_op0_in_1__0" "alias alu1_op0_stage1 alu1_op0_out__0"
alias "alu1_op0_in_1__1" "alias alu1_op0_stage1 alu1_op0_out__1"

alias "alu1_op0_output" ""

alias "alu1_op0_out__0" "alu1_opj_in_0__0"
alias "alu1_op0_out__1" "alu1_opj_in_0__1"

alias "alu1_op0_tick" "alu1_op0_output"
alias "alu1_op0_tickrecurse" "alu_dec_and0_execute; alu1_fa_xor1_execute"
alias "alu1_op0_rcl" "alias alu1_op0_execute ; alu1_op0_tickrecurse; alu1_op0_tick; alias alu1_op0_execute alu1_op0_rcl"
alias "alu1_op0_execute" "alu1_op0_rcl"


//============================================================
// AND gate "alu1_op1"
//============================================================

alias "alu1_op1_in_0__0" "alias alu1_op1_output alu1_op1_out__0"
alias "alu1_op1_in_0__1" "alias alu1_op1_output alu1_op1_stage1"

alias "alu1_op1_stage1" "alu1_op1_out__0"

alias "alu1_op1_in_1__0" "alias alu1_op1_stage1 alu1_op1_out__0"
alias "alu1_op1_in_1__1" "alias alu1_op1_stage1 alu1_op1_out__1"

alias "alu1_op1_output" ""

alias "alu1_op1_out__0" "alu1_opj_in_1__0"
alias "alu1_op1_out__1" "alu1_opj_in_1__1"

alias "alu1_op1_tick" "alu1_op1_output"
alias "alu1_op1_tickrecurse" "alu_dec_and1_execute; alu1_land_execute"
alias "alu1_op1_rcl" "alias alu1_op1_execute ; alu1_op1_tickrecurse; alu1_op1_tick; alias alu1_op1_execute alu1_op1_rcl"
alias "alu1_op1_execute" "alu1_op1_rcl"


//============================================================
// AND gate "alu1_op2"
//============================================================

alias "alu1_op2_in_0__0" "alias alu1_op2_output alu1_op2_out__0"
alias "alu1_op2_in_0__1" "alias alu1_op2_output alu1_op2_stage1"

alias "alu1_op2_stage1" "alu1_op2_out__0"

alias "alu1_op2_in_1__0" "alias alu1_op2_stage1 alu1_op2_out__0"
alias "alu1_op2_in_1__1" "alias alu1_op2_stage1 alu1_op2_out__1"

alias "alu1_op2_output" ""

alias "alu1_op2_out__0" "alu1_opj_in_2__0"
alias "alu1_op2_out__1" "alu1_opj_in_2__1"

alias "alu1_op2_tick" "alu1_op2_output"
alias "alu1_op2_tickrecurse" "alu_dec_and2_execute; alu1_lor_execute"
alias "alu1_op2_rcl" "alias alu1_op2_execute ; alu1_op2_tickrecurse; alu1_op2_tick; alias alu1_op2_execute alu1_op2_rcl"
alias "alu1_op2_execute" "alu1_op2_rcl"


//============================================================
// AND gate "alu1_op3"
//============================================================

alias "alu1_op3_in_0__0" "alias alu1_op3_output alu1_op3_out__0"
alias "alu1_op3_in_0__1" "alias alu1_op3_output alu1_op3_stage1"

alias "alu1_op3_stage1" "alu1_op3_out__0"

alias "alu1_op3_in_1__0" "alias alu1_op3_stage1 alu1_op3_out__0"
alias "alu1_op3_in_1__1" "alias alu1_op3_stage1 alu1_op3_out__1"

alias "alu1_op3_output" ""

alias "alu1_op3_out__0" "alu1_opj_in_3__0"
alias "alu1_op3_out__1" "alu1_opj_in_3__1"

alias "alu1_op3_tick" "alu1_op3_output"
alias "alu1_op3_tickrecurse" "alu_dec_and3_execute; alu1_lxor_execute"
alias "alu1_op3_rcl" "alias alu1_op3_execute ; alu1_op3_tickrecurse; alu1_op3_tick; alias alu1_op3_execute alu1_op3_rcl"
alias "alu1_op3_execute" "alu1_op3_rcl"


//============================================================
// OR4 gate "alu1_opj"
//============================================================

alias "alu1_opj_in_0__0" "alias alu1_opj_output alu1_opj_stage1"
alias "alu1_opj_in_0__1" "alias alu1_opj_output alu1_opj_out__1"

alias "alu1_opj_stage1" "alu1_opj_out__0"

alias "alu1_opj_in_1__0" "alias alu1_opj_stage1 alu1_opj_stage2"
alias "alu1_opj_in_1__1" "alias alu1_opj_stage1 alu1_opj_out__1"

alias "alu1_opj_stage2" "alu1_opj_out__0"

alias "alu1_opj_in_2__0" "alias alu1_opj_stage2 alu1_opj_stage3"
alias "alu1_opj_in_2__1" "alias alu1_opj_stage2 alu1_opj_out__1"

alias "alu1_opj_stage3" "alu1_opj_out__0"

alias "alu1_opj_in_3__0" "alias alu1_opj_stage3 alu1_opj_out__0"
alias "alu1_opj_in_3__1" "alias alu1_opj_stage3 alu1_opj_out__1"

alias "alu1_opj_output" ""

alias "alu1_opj_out__0" "echo S[1] = 0"
alias "alu1_opj_out__1" "echo S[1] = 1"

alias "alu1_opj_tick" "alu1_opj_output"
alias "alu1_opj_tickrecurse" "alu1_op0_execute; alu1_op1_execute; alu1_op2_execute; alu1_op3_execute"
alias "alu1_opj_rcl" "alias alu1_opj_execute ; alu1_opj_tickrecurse; alu1_opj_tick; alias alu1_opj_execute alu1_opj_rcl"
alias "alu1_opj_execute" "alu1_opj_rcl"


alias "alu2_A__0" "alu2_fa_xor0_in_0__0; alu2_fa_and1_in_0__0; alu2_land_in_0__0; alu2_lor_in_0__0; alu2_lxor_in_0__0"
alias "alu2_A__1" "alu2_fa_xor0_in_0__1; alu2_fa_and1_in_0__1; alu2_land_in_0__1; alu2_lor_in_0__1; alu2_lxor_in_0__1"
alias "alu2_B__0" "alu2_fa_xor0_in_1__0; alu2_fa_and1_in_1__0; alu2_land_in_1__0; alu2_lor_in_1__0; alu2_lxor_in_1__0"
alias "alu2_B__1" "alu2_fa_xor0_in_1__1; alu2_fa_and1_in_1__1; alu2_land_in_1__1; alu2_lor_in_1__1; alu2_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 2 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu2_fa_xor0"
//============================================================

alias "alu2_fa_xor0_in_0__0" "alias alu2_fa_xor0_output alu2_fa_xor0_stage1"
alias "alu2_fa_xor0_in_0__1" "alias alu2_fa_xor0_output alu2_fa_xor0_stage2"

alias "alu2_fa_xor0_stage1" "alu2_fa_xor0_out__0"

alias "alu2_fa_xor0_stage2" "alu2_fa_xor0_out__1"

alias "alu2_fa_xor0_in_1__0" "alias alu2_fa_xor0_stage1 alu2_fa_xor0_out__0; alias alu2_fa_xor0_stage2 alu2_fa_xor0_out__1"
alias "alu2_fa_xor0_in_1__1" "alias alu2_fa_xor0_stage1 alu2_fa_xor0_out__1; alias alu2_fa_xor0_stage2 alu2_fa_xor0_out__0"

alias "alu2_fa_xor0_output" ""

alias "alu2_fa_xor0_out__0" "alu2_fa_xor1_in_0__0; alu2_fa_and0_in_0__0"
alias "alu2_fa_xor0_out__1" "alu2_fa_xor1_in_0__1; alu2_fa_and0_in_0__1"

alias "alu2_fa_xor0_tick" "alu2_fa_xor0_output"
alias "alu2_fa_xor0_tickrecurse" ""
alias "alu2_fa_xor0_rcl" "alias alu2_fa_xor0_execute ; alu2_fa_xor0_tickrecurse; alu2_fa_xor0_tick; alias alu2_fa_xor0_execute alu2_fa_xor0_rcl"
alias "alu2_fa_xor0_execute" "alu2_fa_xor0_rcl"


//============================================================
// XOR gate "alu2_fa_xor1"
//============================================================

alias "alu2_fa_xor1_in_0__0" "alias alu2_fa_xor1_output alu2_fa_xor1_stage1"
alias "alu2_fa_xor1_in_0__1" "alias alu2_fa_xor1_output alu2_fa_xor1_stage2"

alias "alu2_fa_xor1_stage1" "alu2_fa_xor1_out__0"

alias "alu2_fa_xor1_stage2" "alu2_fa_xor1_out__1"

alias "alu2_fa_xor1_in_1__0" "alias alu2_fa_xor1_stage1 alu2_fa_xor1_out__0; alias alu2_fa_xor1_stage2 alu2_fa_xor1_out__1"
alias "alu2_fa_xor1_in_1__1" "alias alu2_fa_xor1_stage1 alu2_fa_xor1_out__1; alias alu2_fa_xor1_stage2 alu2_fa_xor1_out__0"

alias "alu2_fa_xor1_output" ""

alias "alu2_fa_xor1_out__0" "alu2_op0_in_1__0"
alias "alu2_fa_xor1_out__1" "alu2_op0_in_1__1"

alias "alu2_fa_xor1_tick" "alu2_fa_xor1_output"
alias "alu2_fa_xor1_tickrecurse" "alu2_fa_xor0_execute; alu1_fa_or_execute"
alias "alu2_fa_xor1_rcl" "alias alu2_fa_xor1_execute ; alu2_fa_xor1_tickrecurse; alu2_fa_xor1_tick; alias alu2_fa_xor1_execute alu2_fa_xor1_rcl"
alias "alu2_fa_xor1_execute" "alu2_fa_xor1_rcl"


//============================================================
// AND gate "alu2_fa_and0"
//============================================================

alias "alu2_fa_and0_in_0__0" "alias alu2_fa_and0_output alu2_fa_and0_out__0"
alias "alu2_fa_and0_in_0__1" "alias alu2_fa_and0_output alu2_fa_and0_stage1"

alias "alu2_fa_and0_stage1" "alu2_fa_and0_out__0"

alias "alu2_fa_and0_in_1__0" "alias alu2_fa_and0_stage1 alu2_fa_and0_out__0"
alias "alu2_fa_and0_in_1__1" "alias alu2_fa_and0_stage1 alu2_fa_and0_out__1"

alias "alu2_fa_and0_output" ""

alias "alu2_fa_and0_out__0" "alu2_fa_or_in_0__0"
alias "alu2_fa_and0_out__1" "alu2_fa_or_in_0__1"

alias "alu2_fa_and0_tick" "alu2_fa_and0_output"
alias "alu2_fa_and0_tickrecurse" "alu2_fa_xor0_execute; alu1_fa_or_execute"
alias "alu2_fa_and0_rcl" "alias alu2_fa_and0_execute ; alu2_fa_and0_tickrecurse; alu2_fa_and0_tick; alias alu2_fa_and0_execute alu2_fa_and0_rcl"
alias "alu2_fa_and0_execute" "alu2_fa_and0_rcl"


//============================================================
// AND gate "alu2_fa_and1"
//============================================================

alias "alu2_fa_and1_in_0__0" "alias alu2_fa_and1_output alu2_fa_and1_out__0"
alias "alu2_fa_and1_in_0__1" "alias alu2_fa_and1_output alu2_fa_and1_stage1"

alias "alu2_fa_and1_stage1" "alu2_fa_and1_out__0"

alias "alu2_fa_and1_in_1__0" "alias alu2_fa_and1_stage1 alu2_fa_and1_out__0"
alias "alu2_fa_and1_in_1__1" "alias alu2_fa_and1_stage1 alu2_fa_and1_out__1"

alias "alu2_fa_and1_output" ""

alias "alu2_fa_and1_out__0" "alu2_fa_or_in_1__0"
alias "alu2_fa_and1_out__1" "alu2_fa_or_in_1__1"

alias "alu2_fa_and1_tick" "alu2_fa_and1_output"
alias "alu2_fa_and1_tickrecurse" ""
alias "alu2_fa_and1_rcl" "alias alu2_fa_and1_execute ; alu2_fa_and1_tickrecurse; alu2_fa_and1_tick; alias alu2_fa_and1_execute alu2_fa_and1_rcl"
alias "alu2_fa_and1_execute" "alu2_fa_and1_rcl"


//============================================================
// OR gate "alu2_fa_or"
//============================================================

alias "alu2_fa_or_in_0__0" "alias alu2_fa_or_output alu2_fa_or_stage1"
alias "alu2_fa_or_in_0__1" "alias alu2_fa_or_output alu2_fa_or_out__1"

alias "alu2_fa_or_stage1" "alu2_fa_or_out__0"

alias "alu2_fa_or_in_1__0" "alias alu2_fa_or_stage1 alu2_fa_or_out__0"
alias "alu2_fa_or_in_1__1" "alias alu2_fa_or_stage1 alu2_fa_or_out__1"

alias "alu2_fa_or_output" ""

alias "alu2_fa_or_out__0" "alu3_fa_xor1_in_1__0; alu3_fa_and0_in_1__0"
alias "alu2_fa_or_out__1" "alu3_fa_xor1_in_1__1; alu3_fa_and0_in_1__1"

alias "alu2_fa_or_tick" "alu2_fa_or_output"
alias "alu2_fa_or_tickrecurse" "alu2_fa_and0_execute; alu2_fa_and1_execute"
alias "alu2_fa_or_rcl" "alias alu2_fa_or_execute ; alu2_fa_or_tickrecurse; alu2_fa_or_tick; alias alu2_fa_or_execute alu2_fa_or_rcl"
alias "alu2_fa_or_execute" "alu2_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 2 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu2_land"
//============================================================

alias "alu2_land_in_0__0" "alias alu2_land_output alu2_land_out__0"
alias "alu2_land_in_0__1" "alias alu2_land_output alu2_land_stage1"

alias "alu2_land_stage1" "alu2_land_out__0"

alias "alu2_land_in_1__0" "alias alu2_land_stage1 alu2_land_out__0"
alias "alu2_land_in_1__1" "alias alu2_land_stage1 alu2_land_out__1"

alias "alu2_land_output" ""

alias "alu2_land_out__0" "alu2_op1_in_1__0"
alias "alu2_land_out__1" "alu2_op1_in_1__1"

alias "alu2_land_tick" "alu2_land_output"
alias "alu2_land_tickrecurse" ""
alias "alu2_land_rcl" "alias alu2_land_execute ; alu2_land_tickrecurse; alu2_land_tick; alias alu2_land_execute alu2_land_rcl"
alias "alu2_land_execute" "alu2_land_rcl"


//============================================================
// OR gate "alu2_lor"
//============================================================

alias "alu2_lor_in_0__0" "alias alu2_lor_output alu2_lor_stage1"
alias "alu2_lor_in_0__1" "alias alu2_lor_output alu2_lor_out__1"

alias "alu2_lor_stage1" "alu2_lor_out__0"

alias "alu2_lor_in_1__0" "alias alu2_lor_stage1 alu2_lor_out__0"
alias "alu2_lor_in_1__1" "alias alu2_lor_stage1 alu2_lor_out__1"

alias "alu2_lor_output" ""

alias "alu2_lor_out__0" "alu2_op2_in_1__0"
alias "alu2_lor_out__1" "alu2_op2_in_1__1"

alias "alu2_lor_tick" "alu2_lor_output"
alias "alu2_lor_tickrecurse" ""
alias "alu2_lor_rcl" "alias alu2_lor_execute ; alu2_lor_tickrecurse; alu2_lor_tick; alias alu2_lor_execute alu2_lor_rcl"
alias "alu2_lor_execute" "alu2_lor_rcl"


//============================================================
// XOR gate "alu2_lxor"
//============================================================

alias "alu2_lxor_in_0__0" "alias alu2_lxor_output alu2_lxor_stage1"
alias "alu2_lxor_in_0__1" "alias alu2_lxor_output alu2_lxor_stage2"

alias "alu2_lxor_stage1" "alu2_lxor_out__0"

alias "alu2_lxor_stage2" "alu2_lxor_out__1"

alias "alu2_lxor_in_1__0" "alias alu2_lxor_stage1 alu2_lxor_out__0; alias alu2_lxor_stage2 alu2_lxor_out__1"
alias "alu2_lxor_in_1__1" "alias alu2_lxor_stage1 alu2_lxor_out__1; alias alu2_lxor_stage2 alu2_lxor_out__0"

alias "alu2_lxor_output" ""

alias "alu2_lxor_out__0" "alu2_op3_in_1__0"
alias "alu2_lxor_out__1" "alu2_op3_in_1__1"

alias "alu2_lxor_tick" "alu2_lxor_output"
alias "alu2_lxor_tickrecurse" ""
alias "alu2_lxor_rcl" "alias alu2_lxor_execute ; alu2_lxor_tickrecurse; alu2_lxor_tick; alias alu2_lxor_execute alu2_lxor_rcl"
alias "alu2_lxor_execute" "alu2_lxor_rcl"


//*************************************************************************************
// Op selector for bit 2 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu2_op0"
//============================================================

alias "alu2_op0_in_0__0" "alias alu2_op0_output alu2_op0_out__0"
alias "alu2_op0_in_0__1" "alias alu2_op0_output alu2_op0_stage1"

alias "alu2_op0_stage1" "alu2_op0_out__0"

alias "alu2_op0_in_1__0" "alias alu2_op0_stage1 alu2_op0_out__0"
alias "alu2_op0_in_1__1" "alias alu2_op0_stage1 alu2_op0_out__1"

alias "alu2_op0_output" ""

alias "alu2_op0_out__0" "alu2_opj_in_0__0"
alias "alu2_op0_out__1" "alu2_opj_in_0__1"

alias "alu2_op0_tick" "alu2_op0_output"
alias "alu2_op0_tickrecurse" "alu_dec_and0_execute; alu2_fa_xor1_execute"
alias "alu2_op0_rcl" "alias alu2_op0_execute ; alu2_op0_tickrecurse; alu2_op0_tick; alias alu2_op0_execute alu2_op0_rcl"
alias "alu2_op0_execute" "alu2_op0_rcl"


//============================================================
// AND gate "alu2_op1"
//============================================================

alias "alu2_op1_in_0__0" "alias alu2_op1_output alu2_op1_out__0"
alias "alu2_op1_in_0__1" "alias alu2_op1_output alu2_op1_stage1"

alias "alu2_op1_stage1" "alu2_op1_out__0"

alias "alu2_op1_in_1__0" "alias alu2_op1_stage1 alu2_op1_out__0"
alias "alu2_op1_in_1__1" "alias alu2_op1_stage1 alu2_op1_out__1"

alias "alu2_op1_output" ""

alias "alu2_op1_out__0" "alu2_opj_in_1__0"
alias "alu2_op1_out__1" "alu2_opj_in_1__1"

alias "alu2_op1_tick" "alu2_op1_output"
alias "alu2_op1_tickrecurse" "alu_dec_and1_execute; alu2_land_execute"
alias "alu2_op1_rcl" "alias alu2_op1_execute ; alu2_op1_tickrecurse; alu2_op1_tick; alias alu2_op1_execute alu2_op1_rcl"
alias "alu2_op1_execute" "alu2_op1_rcl"


//============================================================
// AND gate "alu2_op2"
//============================================================

alias "alu2_op2_in_0__0" "alias alu2_op2_output alu2_op2_out__0"
alias "alu2_op2_in_0__1" "alias alu2_op2_output alu2_op2_stage1"

alias "alu2_op2_stage1" "alu2_op2_out__0"

alias "alu2_op2_in_1__0" "alias alu2_op2_stage1 alu2_op2_out__0"
alias "alu2_op2_in_1__1" "alias alu2_op2_stage1 alu2_op2_out__1"

alias "alu2_op2_output" ""

alias "alu2_op2_out__0" "alu2_opj_in_2__0"
alias "alu2_op2_out__1" "alu2_opj_in_2__1"

alias "alu2_op2_tick" "alu2_op2_output"
alias "alu2_op2_tickrecurse" "alu_dec_and2_execute; alu2_lor_execute"
alias "alu2_op2_rcl" "alias alu2_op2_execute ; alu2_op2_tickrecurse; alu2_op2_tick; alias alu2_op2_execute alu2_op2_rcl"
alias "alu2_op2_execute" "alu2_op2_rcl"


//============================================================
// AND gate "alu2_op3"
//============================================================

alias "alu2_op3_in_0__0" "alias alu2_op3_output alu2_op3_out__0"
alias "alu2_op3_in_0__1" "alias alu2_op3_output alu2_op3_stage1"

alias "alu2_op3_stage1" "alu2_op3_out__0"

alias "alu2_op3_in_1__0" "alias alu2_op3_stage1 alu2_op3_out__0"
alias "alu2_op3_in_1__1" "alias alu2_op3_stage1 alu2_op3_out__1"

alias "alu2_op3_output" ""

alias "alu2_op3_out__0" "alu2_opj_in_3__0"
alias "alu2_op3_out__1" "alu2_opj_in_3__1"

alias "alu2_op3_tick" "alu2_op3_output"
alias "alu2_op3_tickrecurse" "alu_dec_and3_execute; alu2_lxor_execute"
alias "alu2_op3_rcl" "alias alu2_op3_execute ; alu2_op3_tickrecurse; alu2_op3_tick; alias alu2_op3_execute alu2_op3_rcl"
alias "alu2_op3_execute" "alu2_op3_rcl"


//============================================================
// OR4 gate "alu2_opj"
//============================================================

alias "alu2_opj_in_0__0" "alias alu2_opj_output alu2_opj_stage1"
alias "alu2_opj_in_0__1" "alias alu2_opj_output alu2_opj_out__1"

alias "alu2_opj_stage1" "alu2_opj_out__0"

alias "alu2_opj_in_1__0" "alias alu2_opj_stage1 alu2_opj_stage2"
alias "alu2_opj_in_1__1" "alias alu2_opj_stage1 alu2_opj_out__1"

alias "alu2_opj_stage2" "alu2_opj_out__0"

alias "alu2_opj_in_2__0" "alias alu2_opj_stage2 alu2_opj_stage3"
alias "alu2_opj_in_2__1" "alias alu2_opj_stage2 alu2_opj_out__1"

alias "alu2_opj_stage3" "alu2_opj_out__0"

alias "alu2_opj_in_3__0" "alias alu2_opj_stage3 alu2_opj_out__0"
alias "alu2_opj_in_3__1" "alias alu2_opj_stage3 alu2_opj_out__1"

alias "alu2_opj_output" ""

alias "alu2_opj_out__0" "echo S[2] = 0"
alias "alu2_opj_out__1" "echo S[2] = 1"

alias "alu2_opj_tick" "alu2_opj_output"
alias "alu2_opj_tickrecurse" "alu2_op0_execute; alu2_op1_execute; alu2_op2_execute; alu2_op3_execute"
alias "alu2_opj_rcl" "alias alu2_opj_execute ; alu2_opj_tickrecurse; alu2_opj_tick; alias alu2_opj_execute alu2_opj_rcl"
alias "alu2_opj_execute" "alu2_opj_rcl"


alias "alu3_A__0" "alu3_fa_xor0_in_0__0; alu3_fa_and1_in_0__0; alu3_land_in_0__0; alu3_lor_in_0__0; alu3_lxor_in_0__0"
alias "alu3_A__1" "alu3_fa_xor0_in_0__1; alu3_fa_and1_in_0__1; alu3_land_in_0__1; alu3_lor_in_0__1; alu3_lxor_in_0__1"
alias "alu3_B__0" "alu3_fa_xor0_in_1__0; alu3_fa_and1_in_1__0; alu3_land_in_1__0; alu3_lor_in_1__0; alu3_lxor_in_1__0"
alias "alu3_B__1" "alu3_fa_xor0_in_1__1; alu3_fa_and1_in_1__1; alu3_land_in_1__1; alu3_lor_in_1__1; alu3_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 3 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu3_fa_xor0"
//============================================================

alias "alu3_fa_xor0_in_0__0" "alias alu3_fa_xor0_output alu3_fa_xor0_stage1"
alias "alu3_fa_xor0_in_0__1" "alias alu3_fa_xor0_output alu3_fa_xor0_stage2"

alias "alu3_fa_xor0_stage1" "alu3_fa_xor0_out__0"

alias "alu3_fa_xor0_stage2" "alu3_fa_xor0_out__1"

alias "alu3_fa_xor0_in_1__0" "alias alu3_fa_xor0_stage1 alu3_fa_xor0_out__0; alias alu3_fa_xor0_stage2 alu3_fa_xor0_out__1"
alias "alu3_fa_xor0_in_1__1" "alias alu3_fa_xor0_stage1 alu3_fa_xor0_out__1; alias alu3_fa_xor0_stage2 alu3_fa_xor0_out__0"

alias "alu3_fa_xor0_output" ""

alias "alu3_fa_xor0_out__0" "alu3_fa_xor1_in_0__0; alu3_fa_and0_in_0__0"
alias "alu3_fa_xor0_out__1" "alu3_fa_xor1_in_0__1; alu3_fa_and0_in_0__1"

alias "alu3_fa_xor0_tick" "alu3_fa_xor0_output"
alias "alu3_fa_xor0_tickrecurse" ""
alias "alu3_fa_xor0_rcl" "alias alu3_fa_xor0_execute ; alu3_fa_xor0_tickrecurse; alu3_fa_xor0_tick; alias alu3_fa_xor0_execute alu3_fa_xor0_rcl"
alias "alu3_fa_xor0_execute" "alu3_fa_xor0_rcl"


//============================================================
// XOR gate "alu3_fa_xor1"
//============================================================

alias "alu3_fa_xor1_in_0__0" "alias alu3_fa_xor1_output alu3_fa_xor1_stage1"
alias "alu3_fa_xor1_in_0__1" "alias alu3_fa_xor1_output alu3_fa_xor1_stage2"

alias "alu3_fa_xor1_stage1" "alu3_fa_xor1_out__0"

alias "alu3_fa_xor1_stage2" "alu3_fa_xor1_out__1"

alias "alu3_fa_xor1_in_1__0" "alias alu3_fa_xor1_stage1 alu3_fa_xor1_out__0; alias alu3_fa_xor1_stage2 alu3_fa_xor1_out__1"
alias "alu3_fa_xor1_in_1__1" "alias alu3_fa_xor1_stage1 alu3_fa_xor1_out__1; alias alu3_fa_xor1_stage2 alu3_fa_xor1_out__0"

alias "alu3_fa_xor1_output" ""

alias "alu3_fa_xor1_out__0" "alu3_op0_in_1__0"
alias "alu3_fa_xor1_out__1" "alu3_op0_in_1__1"

alias "alu3_fa_xor1_tick" "alu3_fa_xor1_output"
alias "alu3_fa_xor1_tickrecurse" "alu3_fa_xor0_execute; alu2_fa_or_execute"
alias "alu3_fa_xor1_rcl" "alias alu3_fa_xor1_execute ; alu3_fa_xor1_tickrecurse; alu3_fa_xor1_tick; alias alu3_fa_xor1_execute alu3_fa_xor1_rcl"
alias "alu3_fa_xor1_execute" "alu3_fa_xor1_rcl"


//============================================================
// AND gate "alu3_fa_and0"
//============================================================

alias "alu3_fa_and0_in_0__0" "alias alu3_fa_and0_output alu3_fa_and0_out__0"
alias "alu3_fa_and0_in_0__1" "alias alu3_fa_and0_output alu3_fa_and0_stage1"

alias "alu3_fa_and0_stage1" "alu3_fa_and0_out__0"

alias "alu3_fa_and0_in_1__0" "alias alu3_fa_and0_stage1 alu3_fa_and0_out__0"
alias "alu3_fa_and0_in_1__1" "alias alu3_fa_and0_stage1 alu3_fa_and0_out__1"

alias "alu3_fa_and0_output" ""

alias "alu3_fa_and0_out__0" "alu3_fa_or_in_0__0"
alias "alu3_fa_and0_out__1" "alu3_fa_or_in_0__1"

alias "alu3_fa_and0_tick" "alu3_fa_and0_output"
alias "alu3_fa_and0_tickrecurse" "alu3_fa_xor0_execute; alu2_fa_or_execute"
alias "alu3_fa_and0_rcl" "alias alu3_fa_and0_execute ; alu3_fa_and0_tickrecurse; alu3_fa_and0_tick; alias alu3_fa_and0_execute alu3_fa_and0_rcl"
alias "alu3_fa_and0_execute" "alu3_fa_and0_rcl"


//============================================================
// AND gate "alu3_fa_and1"
//============================================================

alias "alu3_fa_and1_in_0__0" "alias alu3_fa_and1_output alu3_fa_and1_out__0"
alias "alu3_fa_and1_in_0__1" "alias alu3_fa_and1_output alu3_fa_and1_stage1"

alias "alu3_fa_and1_stage1" "alu3_fa_and1_out__0"

alias "alu3_fa_and1_in_1__0" "alias alu3_fa_and1_stage1 alu3_fa_and1_out__0"
alias "alu3_fa_and1_in_1__1" "alias alu3_fa_and1_stage1 alu3_fa_and1_out__1"

alias "alu3_fa_and1_output" ""

alias "alu3_fa_and1_out__0" "alu3_fa_or_in_1__0"
alias "alu3_fa_and1_out__1" "alu3_fa_or_in_1__1"

alias "alu3_fa_and1_tick" "alu3_fa_and1_output"
alias "alu3_fa_and1_tickrecurse" ""
alias "alu3_fa_and1_rcl" "alias alu3_fa_and1_execute ; alu3_fa_and1_tickrecurse; alu3_fa_and1_tick; alias alu3_fa_and1_execute alu3_fa_and1_rcl"
alias "alu3_fa_and1_execute" "alu3_fa_and1_rcl"


//============================================================
// OR gate "alu3_fa_or"
//============================================================

alias "alu3_fa_or_in_0__0" "alias alu3_fa_or_output alu3_fa_or_stage1"
alias "alu3_fa_or_in_0__1" "alias alu3_fa_or_output alu3_fa_or_out__1"

alias "alu3_fa_or_stage1" "alu3_fa_or_out__0"

alias "alu3_fa_or_in_1__0" "alias alu3_fa_or_stage1 alu3_fa_or_out__0"
alias "alu3_fa_or_in_1__1" "alias alu3_fa_or_stage1 alu3_fa_or_out__1"

alias "alu3_fa_or_output" ""

alias "alu3_fa_or_out__0" "alu4_fa_xor1_in_1__0; alu4_fa_and0_in_1__0"
alias "alu3_fa_or_out__1" "alu4_fa_xor1_in_1__1; alu4_fa_and0_in_1__1"

alias "alu3_fa_or_tick" "alu3_fa_or_output"
alias "alu3_fa_or_tickrecurse" "alu3_fa_and0_execute; alu3_fa_and1_execute"
alias "alu3_fa_or_rcl" "alias alu3_fa_or_execute ; alu3_fa_or_tickrecurse; alu3_fa_or_tick; alias alu3_fa_or_execute alu3_fa_or_rcl"
alias "alu3_fa_or_execute" "alu3_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 3 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu3_land"
//============================================================

alias "alu3_land_in_0__0" "alias alu3_land_output alu3_land_out__0"
alias "alu3_land_in_0__1" "alias alu3_land_output alu3_land_stage1"

alias "alu3_land_stage1" "alu3_land_out__0"

alias "alu3_land_in_1__0" "alias alu3_land_stage1 alu3_land_out__0"
alias "alu3_land_in_1__1" "alias alu3_land_stage1 alu3_land_out__1"

alias "alu3_land_output" ""

alias "alu3_land_out__0" "alu3_op1_in_1__0"
alias "alu3_land_out__1" "alu3_op1_in_1__1"

alias "alu3_land_tick" "alu3_land_output"
alias "alu3_land_tickrecurse" ""
alias "alu3_land_rcl" "alias alu3_land_execute ; alu3_land_tickrecurse; alu3_land_tick; alias alu3_land_execute alu3_land_rcl"
alias "alu3_land_execute" "alu3_land_rcl"


//============================================================
// OR gate "alu3_lor"
//============================================================

alias "alu3_lor_in_0__0" "alias alu3_lor_output alu3_lor_stage1"
alias "alu3_lor_in_0__1" "alias alu3_lor_output alu3_lor_out__1"

alias "alu3_lor_stage1" "alu3_lor_out__0"

alias "alu3_lor_in_1__0" "alias alu3_lor_stage1 alu3_lor_out__0"
alias "alu3_lor_in_1__1" "alias alu3_lor_stage1 alu3_lor_out__1"

alias "alu3_lor_output" ""

alias "alu3_lor_out__0" "alu3_op2_in_1__0"
alias "alu3_lor_out__1" "alu3_op2_in_1__1"

alias "alu3_lor_tick" "alu3_lor_output"
alias "alu3_lor_tickrecurse" ""
alias "alu3_lor_rcl" "alias alu3_lor_execute ; alu3_lor_tickrecurse; alu3_lor_tick; alias alu3_lor_execute alu3_lor_rcl"
alias "alu3_lor_execute" "alu3_lor_rcl"


//============================================================
// XOR gate "alu3_lxor"
//============================================================

alias "alu3_lxor_in_0__0" "alias alu3_lxor_output alu3_lxor_stage1"
alias "alu3_lxor_in_0__1" "alias alu3_lxor_output alu3_lxor_stage2"

alias "alu3_lxor_stage1" "alu3_lxor_out__0"

alias "alu3_lxor_stage2" "alu3_lxor_out__1"

alias "alu3_lxor_in_1__0" "alias alu3_lxor_stage1 alu3_lxor_out__0; alias alu3_lxor_stage2 alu3_lxor_out__1"
alias "alu3_lxor_in_1__1" "alias alu3_lxor_stage1 alu3_lxor_out__1; alias alu3_lxor_stage2 alu3_lxor_out__0"

alias "alu3_lxor_output" ""

alias "alu3_lxor_out__0" "alu3_op3_in_1__0"
alias "alu3_lxor_out__1" "alu3_op3_in_1__1"

alias "alu3_lxor_tick" "alu3_lxor_output"
alias "alu3_lxor_tickrecurse" ""
alias "alu3_lxor_rcl" "alias alu3_lxor_execute ; alu3_lxor_tickrecurse; alu3_lxor_tick; alias alu3_lxor_execute alu3_lxor_rcl"
alias "alu3_lxor_execute" "alu3_lxor_rcl"


//*************************************************************************************
// Op selector for bit 3 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu3_op0"
//============================================================

alias "alu3_op0_in_0__0" "alias alu3_op0_output alu3_op0_out__0"
alias "alu3_op0_in_0__1" "alias alu3_op0_output alu3_op0_stage1"

alias "alu3_op0_stage1" "alu3_op0_out__0"

alias "alu3_op0_in_1__0" "alias alu3_op0_stage1 alu3_op0_out__0"
alias "alu3_op0_in_1__1" "alias alu3_op0_stage1 alu3_op0_out__1"

alias "alu3_op0_output" ""

alias "alu3_op0_out__0" "alu3_opj_in_0__0"
alias "alu3_op0_out__1" "alu3_opj_in_0__1"

alias "alu3_op0_tick" "alu3_op0_output"
alias "alu3_op0_tickrecurse" "alu_dec_and0_execute; alu3_fa_xor1_execute"
alias "alu3_op0_rcl" "alias alu3_op0_execute ; alu3_op0_tickrecurse; alu3_op0_tick; alias alu3_op0_execute alu3_op0_rcl"
alias "alu3_op0_execute" "alu3_op0_rcl"


//============================================================
// AND gate "alu3_op1"
//============================================================

alias "alu3_op1_in_0__0" "alias alu3_op1_output alu3_op1_out__0"
alias "alu3_op1_in_0__1" "alias alu3_op1_output alu3_op1_stage1"

alias "alu3_op1_stage1" "alu3_op1_out__0"

alias "alu3_op1_in_1__0" "alias alu3_op1_stage1 alu3_op1_out__0"
alias "alu3_op1_in_1__1" "alias alu3_op1_stage1 alu3_op1_out__1"

alias "alu3_op1_output" ""

alias "alu3_op1_out__0" "alu3_opj_in_1__0"
alias "alu3_op1_out__1" "alu3_opj_in_1__1"

alias "alu3_op1_tick" "alu3_op1_output"
alias "alu3_op1_tickrecurse" "alu_dec_and1_execute; alu3_land_execute"
alias "alu3_op1_rcl" "alias alu3_op1_execute ; alu3_op1_tickrecurse; alu3_op1_tick; alias alu3_op1_execute alu3_op1_rcl"
alias "alu3_op1_execute" "alu3_op1_rcl"


//============================================================
// AND gate "alu3_op2"
//============================================================

alias "alu3_op2_in_0__0" "alias alu3_op2_output alu3_op2_out__0"
alias "alu3_op2_in_0__1" "alias alu3_op2_output alu3_op2_stage1"

alias "alu3_op2_stage1" "alu3_op2_out__0"

alias "alu3_op2_in_1__0" "alias alu3_op2_stage1 alu3_op2_out__0"
alias "alu3_op2_in_1__1" "alias alu3_op2_stage1 alu3_op2_out__1"

alias "alu3_op2_output" ""

alias "alu3_op2_out__0" "alu3_opj_in_2__0"
alias "alu3_op2_out__1" "alu3_opj_in_2__1"

alias "alu3_op2_tick" "alu3_op2_output"
alias "alu3_op2_tickrecurse" "alu_dec_and2_execute; alu3_lor_execute"
alias "alu3_op2_rcl" "alias alu3_op2_execute ; alu3_op2_tickrecurse; alu3_op2_tick; alias alu3_op2_execute alu3_op2_rcl"
alias "alu3_op2_execute" "alu3_op2_rcl"


//============================================================
// AND gate "alu3_op3"
//============================================================

alias "alu3_op3_in_0__0" "alias alu3_op3_output alu3_op3_out__0"
alias "alu3_op3_in_0__1" "alias alu3_op3_output alu3_op3_stage1"

alias "alu3_op3_stage1" "alu3_op3_out__0"

alias "alu3_op3_in_1__0" "alias alu3_op3_stage1 alu3_op3_out__0"
alias "alu3_op3_in_1__1" "alias alu3_op3_stage1 alu3_op3_out__1"

alias "alu3_op3_output" ""

alias "alu3_op3_out__0" "alu3_opj_in_3__0"
alias "alu3_op3_out__1" "alu3_opj_in_3__1"

alias "alu3_op3_tick" "alu3_op3_output"
alias "alu3_op3_tickrecurse" "alu_dec_and3_execute; alu3_lxor_execute"
alias "alu3_op3_rcl" "alias alu3_op3_execute ; alu3_op3_tickrecurse; alu3_op3_tick; alias alu3_op3_execute alu3_op3_rcl"
alias "alu3_op3_execute" "alu3_op3_rcl"


//============================================================
// OR4 gate "alu3_opj"
//============================================================

alias "alu3_opj_in_0__0" "alias alu3_opj_output alu3_opj_stage1"
alias "alu3_opj_in_0__1" "alias alu3_opj_output alu3_opj_out__1"

alias "alu3_opj_stage1" "alu3_opj_out__0"

alias "alu3_opj_in_1__0" "alias alu3_opj_stage1 alu3_opj_stage2"
alias "alu3_opj_in_1__1" "alias alu3_opj_stage1 alu3_opj_out__1"

alias "alu3_opj_stage2" "alu3_opj_out__0"

alias "alu3_opj_in_2__0" "alias alu3_opj_stage2 alu3_opj_stage3"
alias "alu3_opj_in_2__1" "alias alu3_opj_stage2 alu3_opj_out__1"

alias "alu3_opj_stage3" "alu3_opj_out__0"

alias "alu3_opj_in_3__0" "alias alu3_opj_stage3 alu3_opj_out__0"
alias "alu3_opj_in_3__1" "alias alu3_opj_stage3 alu3_opj_out__1"

alias "alu3_opj_output" ""

alias "alu3_opj_out__0" "echo S[3] = 0"
alias "alu3_opj_out__1" "echo S[3] = 1"

alias "alu3_opj_tick" "alu3_opj_output"
alias "alu3_opj_tickrecurse" "alu3_op0_execute; alu3_op1_execute; alu3_op2_execute; alu3_op3_execute"
alias "alu3_opj_rcl" "alias alu3_opj_execute ; alu3_opj_tickrecurse; alu3_opj_tick; alias alu3_opj_execute alu3_opj_rcl"
alias "alu3_opj_execute" "alu3_opj_rcl"


alias "alu4_A__0" "alu4_fa_xor0_in_0__0; alu4_fa_and1_in_0__0; alu4_land_in_0__0; alu4_lor_in_0__0; alu4_lxor_in_0__0"
alias "alu4_A__1" "alu4_fa_xor0_in_0__1; alu4_fa_and1_in_0__1; alu4_land_in_0__1; alu4_lor_in_0__1; alu4_lxor_in_0__1"
alias "alu4_B__0" "alu4_fa_xor0_in_1__0; alu4_fa_and1_in_1__0; alu4_land_in_1__0; alu4_lor_in_1__0; alu4_lxor_in_1__0"
alias "alu4_B__1" "alu4_fa_xor0_in_1__1; alu4_fa_and1_in_1__1; alu4_land_in_1__1; alu4_lor_in_1__1; alu4_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 4 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu4_fa_xor0"
//============================================================

alias "alu4_fa_xor0_in_0__0" "alias alu4_fa_xor0_output alu4_fa_xor0_stage1"
alias "alu4_fa_xor0_in_0__1" "alias alu4_fa_xor0_output alu4_fa_xor0_stage2"

alias "alu4_fa_xor0_stage1" "alu4_fa_xor0_out__0"

alias "alu4_fa_xor0_stage2" "alu4_fa_xor0_out__1"

alias "alu4_fa_xor0_in_1__0" "alias alu4_fa_xor0_stage1 alu4_fa_xor0_out__0; alias alu4_fa_xor0_stage2 alu4_fa_xor0_out__1"
alias "alu4_fa_xor0_in_1__1" "alias alu4_fa_xor0_stage1 alu4_fa_xor0_out__1; alias alu4_fa_xor0_stage2 alu4_fa_xor0_out__0"

alias "alu4_fa_xor0_output" ""

alias "alu4_fa_xor0_out__0" "alu4_fa_xor1_in_0__0; alu4_fa_and0_in_0__0"
alias "alu4_fa_xor0_out__1" "alu4_fa_xor1_in_0__1; alu4_fa_and0_in_0__1"

alias "alu4_fa_xor0_tick" "alu4_fa_xor0_output"
alias "alu4_fa_xor0_tickrecurse" ""
alias "alu4_fa_xor0_rcl" "alias alu4_fa_xor0_execute ; alu4_fa_xor0_tickrecurse; alu4_fa_xor0_tick; alias alu4_fa_xor0_execute alu4_fa_xor0_rcl"
alias "alu4_fa_xor0_execute" "alu4_fa_xor0_rcl"


//============================================================
// XOR gate "alu4_fa_xor1"
//============================================================

alias "alu4_fa_xor1_in_0__0" "alias alu4_fa_xor1_output alu4_fa_xor1_stage1"
alias "alu4_fa_xor1_in_0__1" "alias alu4_fa_xor1_output alu4_fa_xor1_stage2"

alias "alu4_fa_xor1_stage1" "alu4_fa_xor1_out__0"

alias "alu4_fa_xor1_stage2" "alu4_fa_xor1_out__1"

alias "alu4_fa_xor1_in_1__0" "alias alu4_fa_xor1_stage1 alu4_fa_xor1_out__0; alias alu4_fa_xor1_stage2 alu4_fa_xor1_out__1"
alias "alu4_fa_xor1_in_1__1" "alias alu4_fa_xor1_stage1 alu4_fa_xor1_out__1; alias alu4_fa_xor1_stage2 alu4_fa_xor1_out__0"

alias "alu4_fa_xor1_output" ""

alias "alu4_fa_xor1_out__0" "alu4_op0_in_1__0"
alias "alu4_fa_xor1_out__1" "alu4_op0_in_1__1"

alias "alu4_fa_xor1_tick" "alu4_fa_xor1_output"
alias "alu4_fa_xor1_tickrecurse" "alu4_fa_xor0_execute; alu3_fa_or_execute"
alias "alu4_fa_xor1_rcl" "alias alu4_fa_xor1_execute ; alu4_fa_xor1_tickrecurse; alu4_fa_xor1_tick; alias alu4_fa_xor1_execute alu4_fa_xor1_rcl"
alias "alu4_fa_xor1_execute" "alu4_fa_xor1_rcl"


//============================================================
// AND gate "alu4_fa_and0"
//============================================================

alias "alu4_fa_and0_in_0__0" "alias alu4_fa_and0_output alu4_fa_and0_out__0"
alias "alu4_fa_and0_in_0__1" "alias alu4_fa_and0_output alu4_fa_and0_stage1"

alias "alu4_fa_and0_stage1" "alu4_fa_and0_out__0"

alias "alu4_fa_and0_in_1__0" "alias alu4_fa_and0_stage1 alu4_fa_and0_out__0"
alias "alu4_fa_and0_in_1__1" "alias alu4_fa_and0_stage1 alu4_fa_and0_out__1"

alias "alu4_fa_and0_output" ""

alias "alu4_fa_and0_out__0" "alu4_fa_or_in_0__0"
alias "alu4_fa_and0_out__1" "alu4_fa_or_in_0__1"

alias "alu4_fa_and0_tick" "alu4_fa_and0_output"
alias "alu4_fa_and0_tickrecurse" "alu4_fa_xor0_execute; alu3_fa_or_execute"
alias "alu4_fa_and0_rcl" "alias alu4_fa_and0_execute ; alu4_fa_and0_tickrecurse; alu4_fa_and0_tick; alias alu4_fa_and0_execute alu4_fa_and0_rcl"
alias "alu4_fa_and0_execute" "alu4_fa_and0_rcl"


//============================================================
// AND gate "alu4_fa_and1"
//============================================================

alias "alu4_fa_and1_in_0__0" "alias alu4_fa_and1_output alu4_fa_and1_out__0"
alias "alu4_fa_and1_in_0__1" "alias alu4_fa_and1_output alu4_fa_and1_stage1"

alias "alu4_fa_and1_stage1" "alu4_fa_and1_out__0"

alias "alu4_fa_and1_in_1__0" "alias alu4_fa_and1_stage1 alu4_fa_and1_out__0"
alias "alu4_fa_and1_in_1__1" "alias alu4_fa_and1_stage1 alu4_fa_and1_out__1"

alias "alu4_fa_and1_output" ""

alias "alu4_fa_and1_out__0" "alu4_fa_or_in_1__0"
alias "alu4_fa_and1_out__1" "alu4_fa_or_in_1__1"

alias "alu4_fa_and1_tick" "alu4_fa_and1_output"
alias "alu4_fa_and1_tickrecurse" ""
alias "alu4_fa_and1_rcl" "alias alu4_fa_and1_execute ; alu4_fa_and1_tickrecurse; alu4_fa_and1_tick; alias alu4_fa_and1_execute alu4_fa_and1_rcl"
alias "alu4_fa_and1_execute" "alu4_fa_and1_rcl"


//============================================================
// OR gate "alu4_fa_or"
//============================================================

alias "alu4_fa_or_in_0__0" "alias alu4_fa_or_output alu4_fa_or_stage1"
alias "alu4_fa_or_in_0__1" "alias alu4_fa_or_output alu4_fa_or_out__1"

alias "alu4_fa_or_stage1" "alu4_fa_or_out__0"

alias "alu4_fa_or_in_1__0" "alias alu4_fa_or_stage1 alu4_fa_or_out__0"
alias "alu4_fa_or_in_1__1" "alias alu4_fa_or_stage1 alu4_fa_or_out__1"

alias "alu4_fa_or_output" ""

alias "alu4_fa_or_out__0" "alu5_fa_xor1_in_1__0; alu5_fa_and0_in_1__0"
alias "alu4_fa_or_out__1" "alu5_fa_xor1_in_1__1; alu5_fa_and0_in_1__1"

alias "alu4_fa_or_tick" "alu4_fa_or_output"
alias "alu4_fa_or_tickrecurse" "alu4_fa_and0_execute; alu4_fa_and1_execute"
alias "alu4_fa_or_rcl" "alias alu4_fa_or_execute ; alu4_fa_or_tickrecurse; alu4_fa_or_tick; alias alu4_fa_or_execute alu4_fa_or_rcl"
alias "alu4_fa_or_execute" "alu4_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 4 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu4_land"
//============================================================

alias "alu4_land_in_0__0" "alias alu4_land_output alu4_land_out__0"
alias "alu4_land_in_0__1" "alias alu4_land_output alu4_land_stage1"

alias "alu4_land_stage1" "alu4_land_out__0"

alias "alu4_land_in_1__0" "alias alu4_land_stage1 alu4_land_out__0"
alias "alu4_land_in_1__1" "alias alu4_land_stage1 alu4_land_out__1"

alias "alu4_land_output" ""

alias "alu4_land_out__0" "alu4_op1_in_1__0"
alias "alu4_land_out__1" "alu4_op1_in_1__1"

alias "alu4_land_tick" "alu4_land_output"
alias "alu4_land_tickrecurse" ""
alias "alu4_land_rcl" "alias alu4_land_execute ; alu4_land_tickrecurse; alu4_land_tick; alias alu4_land_execute alu4_land_rcl"
alias "alu4_land_execute" "alu4_land_rcl"


//============================================================
// OR gate "alu4_lor"
//============================================================

alias "alu4_lor_in_0__0" "alias alu4_lor_output alu4_lor_stage1"
alias "alu4_lor_in_0__1" "alias alu4_lor_output alu4_lor_out__1"

alias "alu4_lor_stage1" "alu4_lor_out__0"

alias "alu4_lor_in_1__0" "alias alu4_lor_stage1 alu4_lor_out__0"
alias "alu4_lor_in_1__1" "alias alu4_lor_stage1 alu4_lor_out__1"

alias "alu4_lor_output" ""

alias "alu4_lor_out__0" "alu4_op2_in_1__0"
alias "alu4_lor_out__1" "alu4_op2_in_1__1"

alias "alu4_lor_tick" "alu4_lor_output"
alias "alu4_lor_tickrecurse" ""
alias "alu4_lor_rcl" "alias alu4_lor_execute ; alu4_lor_tickrecurse; alu4_lor_tick; alias alu4_lor_execute alu4_lor_rcl"
alias "alu4_lor_execute" "alu4_lor_rcl"


//============================================================
// XOR gate "alu4_lxor"
//============================================================

alias "alu4_lxor_in_0__0" "alias alu4_lxor_output alu4_lxor_stage1"
alias "alu4_lxor_in_0__1" "alias alu4_lxor_output alu4_lxor_stage2"

alias "alu4_lxor_stage1" "alu4_lxor_out__0"

alias "alu4_lxor_stage2" "alu4_lxor_out__1"

alias "alu4_lxor_in_1__0" "alias alu4_lxor_stage1 alu4_lxor_out__0; alias alu4_lxor_stage2 alu4_lxor_out__1"
alias "alu4_lxor_in_1__1" "alias alu4_lxor_stage1 alu4_lxor_out__1; alias alu4_lxor_stage2 alu4_lxor_out__0"

alias "alu4_lxor_output" ""

alias "alu4_lxor_out__0" "alu4_op3_in_1__0"
alias "alu4_lxor_out__1" "alu4_op3_in_1__1"

alias "alu4_lxor_tick" "alu4_lxor_output"
alias "alu4_lxor_tickrecurse" ""
alias "alu4_lxor_rcl" "alias alu4_lxor_execute ; alu4_lxor_tickrecurse; alu4_lxor_tick; alias alu4_lxor_execute alu4_lxor_rcl"
alias "alu4_lxor_execute" "alu4_lxor_rcl"


//*************************************************************************************
// Op selector for bit 4 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu4_op0"
//============================================================

alias "alu4_op0_in_0__0" "alias alu4_op0_output alu4_op0_out__0"
alias "alu4_op0_in_0__1" "alias alu4_op0_output alu4_op0_stage1"

alias "alu4_op0_stage1" "alu4_op0_out__0"

alias "alu4_op0_in_1__0" "alias alu4_op0_stage1 alu4_op0_out__0"
alias "alu4_op0_in_1__1" "alias alu4_op0_stage1 alu4_op0_out__1"

alias "alu4_op0_output" ""

alias "alu4_op0_out__0" "alu4_opj_in_0__0"
alias "alu4_op0_out__1" "alu4_opj_in_0__1"

alias "alu4_op0_tick" "alu4_op0_output"
alias "alu4_op0_tickrecurse" "alu_dec_and0_execute; alu4_fa_xor1_execute"
alias "alu4_op0_rcl" "alias alu4_op0_execute ; alu4_op0_tickrecurse; alu4_op0_tick; alias alu4_op0_execute alu4_op0_rcl"
alias "alu4_op0_execute" "alu4_op0_rcl"


//============================================================
// AND gate "alu4_op1"
//============================================================

alias "alu4_op1_in_0__0" "alias alu4_op1_output alu4_op1_out__0"
alias "alu4_op1_in_0__1" "alias alu4_op1_output alu4_op1_stage1"

alias "alu4_op1_stage1" "alu4_op1_out__0"

alias "alu4_op1_in_1__0" "alias alu4_op1_stage1 alu4_op1_out__0"
alias "alu4_op1_in_1__1" "alias alu4_op1_stage1 alu4_op1_out__1"

alias "alu4_op1_output" ""

alias "alu4_op1_out__0" "alu4_opj_in_1__0"
alias "alu4_op1_out__1" "alu4_opj_in_1__1"

alias "alu4_op1_tick" "alu4_op1_output"
alias "alu4_op1_tickrecurse" "alu_dec_and1_execute; alu4_land_execute"
alias "alu4_op1_rcl" "alias alu4_op1_execute ; alu4_op1_tickrecurse; alu4_op1_tick; alias alu4_op1_execute alu4_op1_rcl"
alias "alu4_op1_execute" "alu4_op1_rcl"


//============================================================
// AND gate "alu4_op2"
//============================================================

alias "alu4_op2_in_0__0" "alias alu4_op2_output alu4_op2_out__0"
alias "alu4_op2_in_0__1" "alias alu4_op2_output alu4_op2_stage1"

alias "alu4_op2_stage1" "alu4_op2_out__0"

alias "alu4_op2_in_1__0" "alias alu4_op2_stage1 alu4_op2_out__0"
alias "alu4_op2_in_1__1" "alias alu4_op2_stage1 alu4_op2_out__1"

alias "alu4_op2_output" ""

alias "alu4_op2_out__0" "alu4_opj_in_2__0"
alias "alu4_op2_out__1" "alu4_opj_in_2__1"

alias "alu4_op2_tick" "alu4_op2_output"
alias "alu4_op2_tickrecurse" "alu_dec_and2_execute; alu4_lor_execute"
alias "alu4_op2_rcl" "alias alu4_op2_execute ; alu4_op2_tickrecurse; alu4_op2_tick; alias alu4_op2_execute alu4_op2_rcl"
alias "alu4_op2_execute" "alu4_op2_rcl"


//============================================================
// AND gate "alu4_op3"
//============================================================

alias "alu4_op3_in_0__0" "alias alu4_op3_output alu4_op3_out__0"
alias "alu4_op3_in_0__1" "alias alu4_op3_output alu4_op3_stage1"

alias "alu4_op3_stage1" "alu4_op3_out__0"

alias "alu4_op3_in_1__0" "alias alu4_op3_stage1 alu4_op3_out__0"
alias "alu4_op3_in_1__1" "alias alu4_op3_stage1 alu4_op3_out__1"

alias "alu4_op3_output" ""

alias "alu4_op3_out__0" "alu4_opj_in_3__0"
alias "alu4_op3_out__1" "alu4_opj_in_3__1"

alias "alu4_op3_tick" "alu4_op3_output"
alias "alu4_op3_tickrecurse" "alu_dec_and3_execute; alu4_lxor_execute"
alias "alu4_op3_rcl" "alias alu4_op3_execute ; alu4_op3_tickrecurse; alu4_op3_tick; alias alu4_op3_execute alu4_op3_rcl"
alias "alu4_op3_execute" "alu4_op3_rcl"


//============================================================
// OR4 gate "alu4_opj"
//============================================================

alias "alu4_opj_in_0__0" "alias alu4_opj_output alu4_opj_stage1"
alias "alu4_opj_in_0__1" "alias alu4_opj_output alu4_opj_out__1"

alias "alu4_opj_stage1" "alu4_opj_out__0"

alias "alu4_opj_in_1__0" "alias alu4_opj_stage1 alu4_opj_stage2"
alias "alu4_opj_in_1__1" "alias alu4_opj_stage1 alu4_opj_out__1"

alias "alu4_opj_stage2" "alu4_opj_out__0"

alias "alu4_opj_in_2__0" "alias alu4_opj_stage2 alu4_opj_stage3"
alias "alu4_opj_in_2__1" "alias alu4_opj_stage2 alu4_opj_out__1"

alias "alu4_opj_stage3" "alu4_opj_out__0"

alias "alu4_opj_in_3__0" "alias alu4_opj_stage3 alu4_opj_out__0"
alias "alu4_opj_in_3__1" "alias alu4_opj_stage3 alu4_opj_out__1"

alias "alu4_opj_output" ""

alias "alu4_opj_out__0" "echo S[4] = 0"
alias "alu4_opj_out__1" "echo S[4] = 1"

alias "alu4_opj_tick" "alu4_opj_output"
alias "alu4_opj_tickrecurse" "alu4_op0_execute; alu4_op1_execute; alu4_op2_execute; alu4_op3_execute"
alias "alu4_opj_rcl" "alias alu4_opj_execute ; alu4_opj_tickrecurse; alu4_opj_tick; alias alu4_opj_execute alu4_opj_rcl"
alias "alu4_opj_execute" "alu4_opj_rcl"


alias "alu5_A__0" "alu5_fa_xor0_in_0__0; alu5_fa_and1_in_0__0; alu5_land_in_0__0; alu5_lor_in_0__0; alu5_lxor_in_0__0"
alias "alu5_A__1" "alu5_fa_xor0_in_0__1; alu5_fa_and1_in_0__1; alu5_land_in_0__1; alu5_lor_in_0__1; alu5_lxor_in_0__1"
alias "alu5_B__0" "alu5_fa_xor0_in_1__0; alu5_fa_and1_in_1__0; alu5_land_in_1__0; alu5_lor_in_1__0; alu5_lxor_in_1__0"
alias "alu5_B__1" "alu5_fa_xor0_in_1__1; alu5_fa_and1_in_1__1; alu5_land_in_1__1; alu5_lor_in_1__1; alu5_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 5 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu5_fa_xor0"
//============================================================

alias "alu5_fa_xor0_in_0__0" "alias alu5_fa_xor0_output alu5_fa_xor0_stage1"
alias "alu5_fa_xor0_in_0__1" "alias alu5_fa_xor0_output alu5_fa_xor0_stage2"

alias "alu5_fa_xor0_stage1" "alu5_fa_xor0_out__0"

alias "alu5_fa_xor0_stage2" "alu5_fa_xor0_out__1"

alias "alu5_fa_xor0_in_1__0" "alias alu5_fa_xor0_stage1 alu5_fa_xor0_out__0; alias alu5_fa_xor0_stage2 alu5_fa_xor0_out__1"
alias "alu5_fa_xor0_in_1__1" "alias alu5_fa_xor0_stage1 alu5_fa_xor0_out__1; alias alu5_fa_xor0_stage2 alu5_fa_xor0_out__0"

alias "alu5_fa_xor0_output" ""

alias "alu5_fa_xor0_out__0" "alu5_fa_xor1_in_0__0; alu5_fa_and0_in_0__0"
alias "alu5_fa_xor0_out__1" "alu5_fa_xor1_in_0__1; alu5_fa_and0_in_0__1"

alias "alu5_fa_xor0_tick" "alu5_fa_xor0_output"
alias "alu5_fa_xor0_tickrecurse" ""
alias "alu5_fa_xor0_rcl" "alias alu5_fa_xor0_execute ; alu5_fa_xor0_tickrecurse; alu5_fa_xor0_tick; alias alu5_fa_xor0_execute alu5_fa_xor0_rcl"
alias "alu5_fa_xor0_execute" "alu5_fa_xor0_rcl"


//============================================================
// XOR gate "alu5_fa_xor1"
//============================================================

alias "alu5_fa_xor1_in_0__0" "alias alu5_fa_xor1_output alu5_fa_xor1_stage1"
alias "alu5_fa_xor1_in_0__1" "alias alu5_fa_xor1_output alu5_fa_xor1_stage2"

alias "alu5_fa_xor1_stage1" "alu5_fa_xor1_out__0"

alias "alu5_fa_xor1_stage2" "alu5_fa_xor1_out__1"

alias "alu5_fa_xor1_in_1__0" "alias alu5_fa_xor1_stage1 alu5_fa_xor1_out__0; alias alu5_fa_xor1_stage2 alu5_fa_xor1_out__1"
alias "alu5_fa_xor1_in_1__1" "alias alu5_fa_xor1_stage1 alu5_fa_xor1_out__1; alias alu5_fa_xor1_stage2 alu5_fa_xor1_out__0"

alias "alu5_fa_xor1_output" ""

alias "alu5_fa_xor1_out__0" "alu5_op0_in_1__0"
alias "alu5_fa_xor1_out__1" "alu5_op0_in_1__1"

alias "alu5_fa_xor1_tick" "alu5_fa_xor1_output"
alias "alu5_fa_xor1_tickrecurse" "alu5_fa_xor0_execute; alu4_fa_or_execute"
alias "alu5_fa_xor1_rcl" "alias alu5_fa_xor1_execute ; alu5_fa_xor1_tickrecurse; alu5_fa_xor1_tick; alias alu5_fa_xor1_execute alu5_fa_xor1_rcl"
alias "alu5_fa_xor1_execute" "alu5_fa_xor1_rcl"


//============================================================
// AND gate "alu5_fa_and0"
//============================================================

alias "alu5_fa_and0_in_0__0" "alias alu5_fa_and0_output alu5_fa_and0_out__0"
alias "alu5_fa_and0_in_0__1" "alias alu5_fa_and0_output alu5_fa_and0_stage1"

alias "alu5_fa_and0_stage1" "alu5_fa_and0_out__0"

alias "alu5_fa_and0_in_1__0" "alias alu5_fa_and0_stage1 alu5_fa_and0_out__0"
alias "alu5_fa_and0_in_1__1" "alias alu5_fa_and0_stage1 alu5_fa_and0_out__1"

alias "alu5_fa_and0_output" ""

alias "alu5_fa_and0_out__0" "alu5_fa_or_in_0__0"
alias "alu5_fa_and0_out__1" "alu5_fa_or_in_0__1"

alias "alu5_fa_and0_tick" "alu5_fa_and0_output"
alias "alu5_fa_and0_tickrecurse" "alu5_fa_xor0_execute; alu4_fa_or_execute"
alias "alu5_fa_and0_rcl" "alias alu5_fa_and0_execute ; alu5_fa_and0_tickrecurse; alu5_fa_and0_tick; alias alu5_fa_and0_execute alu5_fa_and0_rcl"
alias "alu5_fa_and0_execute" "alu5_fa_and0_rcl"


//============================================================
// AND gate "alu5_fa_and1"
//============================================================

alias "alu5_fa_and1_in_0__0" "alias alu5_fa_and1_output alu5_fa_and1_out__0"
alias "alu5_fa_and1_in_0__1" "alias alu5_fa_and1_output alu5_fa_and1_stage1"

alias "alu5_fa_and1_stage1" "alu5_fa_and1_out__0"

alias "alu5_fa_and1_in_1__0" "alias alu5_fa_and1_stage1 alu5_fa_and1_out__0"
alias "alu5_fa_and1_in_1__1" "alias alu5_fa_and1_stage1 alu5_fa_and1_out__1"

alias "alu5_fa_and1_output" ""

alias "alu5_fa_and1_out__0" "alu5_fa_or_in_1__0"
alias "alu5_fa_and1_out__1" "alu5_fa_or_in_1__1"

alias "alu5_fa_and1_tick" "alu5_fa_and1_output"
alias "alu5_fa_and1_tickrecurse" ""
alias "alu5_fa_and1_rcl" "alias alu5_fa_and1_execute ; alu5_fa_and1_tickrecurse; alu5_fa_and1_tick; alias alu5_fa_and1_execute alu5_fa_and1_rcl"
alias "alu5_fa_and1_execute" "alu5_fa_and1_rcl"


//============================================================
// OR gate "alu5_fa_or"
//============================================================

alias "alu5_fa_or_in_0__0" "alias alu5_fa_or_output alu5_fa_or_stage1"
alias "alu5_fa_or_in_0__1" "alias alu5_fa_or_output alu5_fa_or_out__1"

alias "alu5_fa_or_stage1" "alu5_fa_or_out__0"

alias "alu5_fa_or_in_1__0" "alias alu5_fa_or_stage1 alu5_fa_or_out__0"
alias "alu5_fa_or_in_1__1" "alias alu5_fa_or_stage1 alu5_fa_or_out__1"

alias "alu5_fa_or_output" ""

alias "alu5_fa_or_out__0" "alu6_fa_xor1_in_1__0; alu6_fa_and0_in_1__0"
alias "alu5_fa_or_out__1" "alu6_fa_xor1_in_1__1; alu6_fa_and0_in_1__1"

alias "alu5_fa_or_tick" "alu5_fa_or_output"
alias "alu5_fa_or_tickrecurse" "alu5_fa_and0_execute; alu5_fa_and1_execute"
alias "alu5_fa_or_rcl" "alias alu5_fa_or_execute ; alu5_fa_or_tickrecurse; alu5_fa_or_tick; alias alu5_fa_or_execute alu5_fa_or_rcl"
alias "alu5_fa_or_execute" "alu5_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 5 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu5_land"
//============================================================

alias "alu5_land_in_0__0" "alias alu5_land_output alu5_land_out__0"
alias "alu5_land_in_0__1" "alias alu5_land_output alu5_land_stage1"

alias "alu5_land_stage1" "alu5_land_out__0"

alias "alu5_land_in_1__0" "alias alu5_land_stage1 alu5_land_out__0"
alias "alu5_land_in_1__1" "alias alu5_land_stage1 alu5_land_out__1"

alias "alu5_land_output" ""

alias "alu5_land_out__0" "alu5_op1_in_1__0"
alias "alu5_land_out__1" "alu5_op1_in_1__1"

alias "alu5_land_tick" "alu5_land_output"
alias "alu5_land_tickrecurse" ""
alias "alu5_land_rcl" "alias alu5_land_execute ; alu5_land_tickrecurse; alu5_land_tick; alias alu5_land_execute alu5_land_rcl"
alias "alu5_land_execute" "alu5_land_rcl"


//============================================================
// OR gate "alu5_lor"
//============================================================

alias "alu5_lor_in_0__0" "alias alu5_lor_output alu5_lor_stage1"
alias "alu5_lor_in_0__1" "alias alu5_lor_output alu5_lor_out__1"

alias "alu5_lor_stage1" "alu5_lor_out__0"

alias "alu5_lor_in_1__0" "alias alu5_lor_stage1 alu5_lor_out__0"
alias "alu5_lor_in_1__1" "alias alu5_lor_stage1 alu5_lor_out__1"

alias "alu5_lor_output" ""

alias "alu5_lor_out__0" "alu5_op2_in_1__0"
alias "alu5_lor_out__1" "alu5_op2_in_1__1"

alias "alu5_lor_tick" "alu5_lor_output"
alias "alu5_lor_tickrecurse" ""
alias "alu5_lor_rcl" "alias alu5_lor_execute ; alu5_lor_tickrecurse; alu5_lor_tick; alias alu5_lor_execute alu5_lor_rcl"
alias "alu5_lor_execute" "alu5_lor_rcl"


//============================================================
// XOR gate "alu5_lxor"
//============================================================

alias "alu5_lxor_in_0__0" "alias alu5_lxor_output alu5_lxor_stage1"
alias "alu5_lxor_in_0__1" "alias alu5_lxor_output alu5_lxor_stage2"

alias "alu5_lxor_stage1" "alu5_lxor_out__0"

alias "alu5_lxor_stage2" "alu5_lxor_out__1"

alias "alu5_lxor_in_1__0" "alias alu5_lxor_stage1 alu5_lxor_out__0; alias alu5_lxor_stage2 alu5_lxor_out__1"
alias "alu5_lxor_in_1__1" "alias alu5_lxor_stage1 alu5_lxor_out__1; alias alu5_lxor_stage2 alu5_lxor_out__0"

alias "alu5_lxor_output" ""

alias "alu5_lxor_out__0" "alu5_op3_in_1__0"
alias "alu5_lxor_out__1" "alu5_op3_in_1__1"

alias "alu5_lxor_tick" "alu5_lxor_output"
alias "alu5_lxor_tickrecurse" ""
alias "alu5_lxor_rcl" "alias alu5_lxor_execute ; alu5_lxor_tickrecurse; alu5_lxor_tick; alias alu5_lxor_execute alu5_lxor_rcl"
alias "alu5_lxor_execute" "alu5_lxor_rcl"


//*************************************************************************************
// Op selector for bit 5 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu5_op0"
//============================================================

alias "alu5_op0_in_0__0" "alias alu5_op0_output alu5_op0_out__0"
alias "alu5_op0_in_0__1" "alias alu5_op0_output alu5_op0_stage1"

alias "alu5_op0_stage1" "alu5_op0_out__0"

alias "alu5_op0_in_1__0" "alias alu5_op0_stage1 alu5_op0_out__0"
alias "alu5_op0_in_1__1" "alias alu5_op0_stage1 alu5_op0_out__1"

alias "alu5_op0_output" ""

alias "alu5_op0_out__0" "alu5_opj_in_0__0"
alias "alu5_op0_out__1" "alu5_opj_in_0__1"

alias "alu5_op0_tick" "alu5_op0_output"
alias "alu5_op0_tickrecurse" "alu_dec_and0_execute; alu5_fa_xor1_execute"
alias "alu5_op0_rcl" "alias alu5_op0_execute ; alu5_op0_tickrecurse; alu5_op0_tick; alias alu5_op0_execute alu5_op0_rcl"
alias "alu5_op0_execute" "alu5_op0_rcl"


//============================================================
// AND gate "alu5_op1"
//============================================================

alias "alu5_op1_in_0__0" "alias alu5_op1_output alu5_op1_out__0"
alias "alu5_op1_in_0__1" "alias alu5_op1_output alu5_op1_stage1"

alias "alu5_op1_stage1" "alu5_op1_out__0"

alias "alu5_op1_in_1__0" "alias alu5_op1_stage1 alu5_op1_out__0"
alias "alu5_op1_in_1__1" "alias alu5_op1_stage1 alu5_op1_out__1"

alias "alu5_op1_output" ""

alias "alu5_op1_out__0" "alu5_opj_in_1__0"
alias "alu5_op1_out__1" "alu5_opj_in_1__1"

alias "alu5_op1_tick" "alu5_op1_output"
alias "alu5_op1_tickrecurse" "alu_dec_and1_execute; alu5_land_execute"
alias "alu5_op1_rcl" "alias alu5_op1_execute ; alu5_op1_tickrecurse; alu5_op1_tick; alias alu5_op1_execute alu5_op1_rcl"
alias "alu5_op1_execute" "alu5_op1_rcl"


//============================================================
// AND gate "alu5_op2"
//============================================================

alias "alu5_op2_in_0__0" "alias alu5_op2_output alu5_op2_out__0"
alias "alu5_op2_in_0__1" "alias alu5_op2_output alu5_op2_stage1"

alias "alu5_op2_stage1" "alu5_op2_out__0"

alias "alu5_op2_in_1__0" "alias alu5_op2_stage1 alu5_op2_out__0"
alias "alu5_op2_in_1__1" "alias alu5_op2_stage1 alu5_op2_out__1"

alias "alu5_op2_output" ""

alias "alu5_op2_out__0" "alu5_opj_in_2__0"
alias "alu5_op2_out__1" "alu5_opj_in_2__1"

alias "alu5_op2_tick" "alu5_op2_output"
alias "alu5_op2_tickrecurse" "alu_dec_and2_execute; alu5_lor_execute"
alias "alu5_op2_rcl" "alias alu5_op2_execute ; alu5_op2_tickrecurse; alu5_op2_tick; alias alu5_op2_execute alu5_op2_rcl"
alias "alu5_op2_execute" "alu5_op2_rcl"


//============================================================
// AND gate "alu5_op3"
//============================================================

alias "alu5_op3_in_0__0" "alias alu5_op3_output alu5_op3_out__0"
alias "alu5_op3_in_0__1" "alias alu5_op3_output alu5_op3_stage1"

alias "alu5_op3_stage1" "alu5_op3_out__0"

alias "alu5_op3_in_1__0" "alias alu5_op3_stage1 alu5_op3_out__0"
alias "alu5_op3_in_1__1" "alias alu5_op3_stage1 alu5_op3_out__1"

alias "alu5_op3_output" ""

alias "alu5_op3_out__0" "alu5_opj_in_3__0"
alias "alu5_op3_out__1" "alu5_opj_in_3__1"

alias "alu5_op3_tick" "alu5_op3_output"
alias "alu5_op3_tickrecurse" "alu_dec_and3_execute; alu5_lxor_execute"
alias "alu5_op3_rcl" "alias alu5_op3_execute ; alu5_op3_tickrecurse; alu5_op3_tick; alias alu5_op3_execute alu5_op3_rcl"
alias "alu5_op3_execute" "alu5_op3_rcl"


//============================================================
// OR4 gate "alu5_opj"
//============================================================

alias "alu5_opj_in_0__0" "alias alu5_opj_output alu5_opj_stage1"
alias "alu5_opj_in_0__1" "alias alu5_opj_output alu5_opj_out__1"

alias "alu5_opj_stage1" "alu5_opj_out__0"

alias "alu5_opj_in_1__0" "alias alu5_opj_stage1 alu5_opj_stage2"
alias "alu5_opj_in_1__1" "alias alu5_opj_stage1 alu5_opj_out__1"

alias "alu5_opj_stage2" "alu5_opj_out__0"

alias "alu5_opj_in_2__0" "alias alu5_opj_stage2 alu5_opj_stage3"
alias "alu5_opj_in_2__1" "alias alu5_opj_stage2 alu5_opj_out__1"

alias "alu5_opj_stage3" "alu5_opj_out__0"

alias "alu5_opj_in_3__0" "alias alu5_opj_stage3 alu5_opj_out__0"
alias "alu5_opj_in_3__1" "alias alu5_opj_stage3 alu5_opj_out__1"

alias "alu5_opj_output" ""

alias "alu5_opj_out__0" "echo S[5] = 0"
alias "alu5_opj_out__1" "echo S[5] = 1"

alias "alu5_opj_tick" "alu5_opj_output"
alias "alu5_opj_tickrecurse" "alu5_op0_execute; alu5_op1_execute; alu5_op2_execute; alu5_op3_execute"
alias "alu5_opj_rcl" "alias alu5_opj_execute ; alu5_opj_tickrecurse; alu5_opj_tick; alias alu5_opj_execute alu5_opj_rcl"
alias "alu5_opj_execute" "alu5_opj_rcl"


alias "alu6_A__0" "alu6_fa_xor0_in_0__0; alu6_fa_and1_in_0__0; alu6_land_in_0__0; alu6_lor_in_0__0; alu6_lxor_in_0__0"
alias "alu6_A__1" "alu6_fa_xor0_in_0__1; alu6_fa_and1_in_0__1; alu6_land_in_0__1; alu6_lor_in_0__1; alu6_lxor_in_0__1"
alias "alu6_B__0" "alu6_fa_xor0_in_1__0; alu6_fa_and1_in_1__0; alu6_land_in_1__0; alu6_lor_in_1__0; alu6_lxor_in_1__0"
alias "alu6_B__1" "alu6_fa_xor0_in_1__1; alu6_fa_and1_in_1__1; alu6_land_in_1__1; alu6_lor_in_1__1; alu6_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 6 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu6_fa_xor0"
//============================================================

alias "alu6_fa_xor0_in_0__0" "alias alu6_fa_xor0_output alu6_fa_xor0_stage1"
alias "alu6_fa_xor0_in_0__1" "alias alu6_fa_xor0_output alu6_fa_xor0_stage2"

alias "alu6_fa_xor0_stage1" "alu6_fa_xor0_out__0"

alias "alu6_fa_xor0_stage2" "alu6_fa_xor0_out__1"

alias "alu6_fa_xor0_in_1__0" "alias alu6_fa_xor0_stage1 alu6_fa_xor0_out__0; alias alu6_fa_xor0_stage2 alu6_fa_xor0_out__1"
alias "alu6_fa_xor0_in_1__1" "alias alu6_fa_xor0_stage1 alu6_fa_xor0_out__1; alias alu6_fa_xor0_stage2 alu6_fa_xor0_out__0"

alias "alu6_fa_xor0_output" ""

alias "alu6_fa_xor0_out__0" "alu6_fa_xor1_in_0__0; alu6_fa_and0_in_0__0"
alias "alu6_fa_xor0_out__1" "alu6_fa_xor1_in_0__1; alu6_fa_and0_in_0__1"

alias "alu6_fa_xor0_tick" "alu6_fa_xor0_output"
alias "alu6_fa_xor0_tickrecurse" ""
alias "alu6_fa_xor0_rcl" "alias alu6_fa_xor0_execute ; alu6_fa_xor0_tickrecurse; alu6_fa_xor0_tick; alias alu6_fa_xor0_execute alu6_fa_xor0_rcl"
alias "alu6_fa_xor0_execute" "alu6_fa_xor0_rcl"


//============================================================
// XOR gate "alu6_fa_xor1"
//============================================================

alias "alu6_fa_xor1_in_0__0" "alias alu6_fa_xor1_output alu6_fa_xor1_stage1"
alias "alu6_fa_xor1_in_0__1" "alias alu6_fa_xor1_output alu6_fa_xor1_stage2"

alias "alu6_fa_xor1_stage1" "alu6_fa_xor1_out__0"

alias "alu6_fa_xor1_stage2" "alu6_fa_xor1_out__1"

alias "alu6_fa_xor1_in_1__0" "alias alu6_fa_xor1_stage1 alu6_fa_xor1_out__0; alias alu6_fa_xor1_stage2 alu6_fa_xor1_out__1"
alias "alu6_fa_xor1_in_1__1" "alias alu6_fa_xor1_stage1 alu6_fa_xor1_out__1; alias alu6_fa_xor1_stage2 alu6_fa_xor1_out__0"

alias "alu6_fa_xor1_output" ""

alias "alu6_fa_xor1_out__0" "alu6_op0_in_1__0"
alias "alu6_fa_xor1_out__1" "alu6_op0_in_1__1"

alias "alu6_fa_xor1_tick" "alu6_fa_xor1_output"
alias "alu6_fa_xor1_tickrecurse" "alu6_fa_xor0_execute; alu5_fa_or_execute"
alias "alu6_fa_xor1_rcl" "alias alu6_fa_xor1_execute ; alu6_fa_xor1_tickrecurse; alu6_fa_xor1_tick; alias alu6_fa_xor1_execute alu6_fa_xor1_rcl"
alias "alu6_fa_xor1_execute" "alu6_fa_xor1_rcl"


//============================================================
// AND gate "alu6_fa_and0"
//============================================================

alias "alu6_fa_and0_in_0__0" "alias alu6_fa_and0_output alu6_fa_and0_out__0"
alias "alu6_fa_and0_in_0__1" "alias alu6_fa_and0_output alu6_fa_and0_stage1"

alias "alu6_fa_and0_stage1" "alu6_fa_and0_out__0"

alias "alu6_fa_and0_in_1__0" "alias alu6_fa_and0_stage1 alu6_fa_and0_out__0"
alias "alu6_fa_and0_in_1__1" "alias alu6_fa_and0_stage1 alu6_fa_and0_out__1"

alias "alu6_fa_and0_output" ""

alias "alu6_fa_and0_out__0" "alu6_fa_or_in_0__0"
alias "alu6_fa_and0_out__1" "alu6_fa_or_in_0__1"

alias "alu6_fa_and0_tick" "alu6_fa_and0_output"
alias "alu6_fa_and0_tickrecurse" "alu6_fa_xor0_execute; alu5_fa_or_execute"
alias "alu6_fa_and0_rcl" "alias alu6_fa_and0_execute ; alu6_fa_and0_tickrecurse; alu6_fa_and0_tick; alias alu6_fa_and0_execute alu6_fa_and0_rcl"
alias "alu6_fa_and0_execute" "alu6_fa_and0_rcl"


//============================================================
// AND gate "alu6_fa_and1"
//============================================================

alias "alu6_fa_and1_in_0__0" "alias alu6_fa_and1_output alu6_fa_and1_out__0"
alias "alu6_fa_and1_in_0__1" "alias alu6_fa_and1_output alu6_fa_and1_stage1"

alias "alu6_fa_and1_stage1" "alu6_fa_and1_out__0"

alias "alu6_fa_and1_in_1__0" "alias alu6_fa_and1_stage1 alu6_fa_and1_out__0"
alias "alu6_fa_and1_in_1__1" "alias alu6_fa_and1_stage1 alu6_fa_and1_out__1"

alias "alu6_fa_and1_output" ""

alias "alu6_fa_and1_out__0" "alu6_fa_or_in_1__0"
alias "alu6_fa_and1_out__1" "alu6_fa_or_in_1__1"

alias "alu6_fa_and1_tick" "alu6_fa_and1_output"
alias "alu6_fa_and1_tickrecurse" ""
alias "alu6_fa_and1_rcl" "alias alu6_fa_and1_execute ; alu6_fa_and1_tickrecurse; alu6_fa_and1_tick; alias alu6_fa_and1_execute alu6_fa_and1_rcl"
alias "alu6_fa_and1_execute" "alu6_fa_and1_rcl"


//============================================================
// OR gate "alu6_fa_or"
//============================================================

alias "alu6_fa_or_in_0__0" "alias alu6_fa_or_output alu6_fa_or_stage1"
alias "alu6_fa_or_in_0__1" "alias alu6_fa_or_output alu6_fa_or_out__1"

alias "alu6_fa_or_stage1" "alu6_fa_or_out__0"

alias "alu6_fa_or_in_1__0" "alias alu6_fa_or_stage1 alu6_fa_or_out__0"
alias "alu6_fa_or_in_1__1" "alias alu6_fa_or_stage1 alu6_fa_or_out__1"

alias "alu6_fa_or_output" ""

alias "alu6_fa_or_out__0" "alu7_fa_xor1_in_1__0; alu7_fa_and0_in_1__0"
alias "alu6_fa_or_out__1" "alu7_fa_xor1_in_1__1; alu7_fa_and0_in_1__1"

alias "alu6_fa_or_tick" "alu6_fa_or_output"
alias "alu6_fa_or_tickrecurse" "alu6_fa_and0_execute; alu6_fa_and1_execute"
alias "alu6_fa_or_rcl" "alias alu6_fa_or_execute ; alu6_fa_or_tickrecurse; alu6_fa_or_tick; alias alu6_fa_or_execute alu6_fa_or_rcl"
alias "alu6_fa_or_execute" "alu6_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 6 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu6_land"
//============================================================

alias "alu6_land_in_0__0" "alias alu6_land_output alu6_land_out__0"
alias "alu6_land_in_0__1" "alias alu6_land_output alu6_land_stage1"

alias "alu6_land_stage1" "alu6_land_out__0"

alias "alu6_land_in_1__0" "alias alu6_land_stage1 alu6_land_out__0"
alias "alu6_land_in_1__1" "alias alu6_land_stage1 alu6_land_out__1"

alias "alu6_land_output" ""

alias "alu6_land_out__0" "alu6_op1_in_1__0"
alias "alu6_land_out__1" "alu6_op1_in_1__1"

alias "alu6_land_tick" "alu6_land_output"
alias "alu6_land_tickrecurse" ""
alias "alu6_land_rcl" "alias alu6_land_execute ; alu6_land_tickrecurse; alu6_land_tick; alias alu6_land_execute alu6_land_rcl"
alias "alu6_land_execute" "alu6_land_rcl"


//============================================================
// OR gate "alu6_lor"
//============================================================

alias "alu6_lor_in_0__0" "alias alu6_lor_output alu6_lor_stage1"
alias "alu6_lor_in_0__1" "alias alu6_lor_output alu6_lor_out__1"

alias "alu6_lor_stage1" "alu6_lor_out__0"

alias "alu6_lor_in_1__0" "alias alu6_lor_stage1 alu6_lor_out__0"
alias "alu6_lor_in_1__1" "alias alu6_lor_stage1 alu6_lor_out__1"

alias "alu6_lor_output" ""

alias "alu6_lor_out__0" "alu6_op2_in_1__0"
alias "alu6_lor_out__1" "alu6_op2_in_1__1"

alias "alu6_lor_tick" "alu6_lor_output"
alias "alu6_lor_tickrecurse" ""
alias "alu6_lor_rcl" "alias alu6_lor_execute ; alu6_lor_tickrecurse; alu6_lor_tick; alias alu6_lor_execute alu6_lor_rcl"
alias "alu6_lor_execute" "alu6_lor_rcl"


//============================================================
// XOR gate "alu6_lxor"
//============================================================

alias "alu6_lxor_in_0__0" "alias alu6_lxor_output alu6_lxor_stage1"
alias "alu6_lxor_in_0__1" "alias alu6_lxor_output alu6_lxor_stage2"

alias "alu6_lxor_stage1" "alu6_lxor_out__0"

alias "alu6_lxor_stage2" "alu6_lxor_out__1"

alias "alu6_lxor_in_1__0" "alias alu6_lxor_stage1 alu6_lxor_out__0; alias alu6_lxor_stage2 alu6_lxor_out__1"
alias "alu6_lxor_in_1__1" "alias alu6_lxor_stage1 alu6_lxor_out__1; alias alu6_lxor_stage2 alu6_lxor_out__0"

alias "alu6_lxor_output" ""

alias "alu6_lxor_out__0" "alu6_op3_in_1__0"
alias "alu6_lxor_out__1" "alu6_op3_in_1__1"

alias "alu6_lxor_tick" "alu6_lxor_output"
alias "alu6_lxor_tickrecurse" ""
alias "alu6_lxor_rcl" "alias alu6_lxor_execute ; alu6_lxor_tickrecurse; alu6_lxor_tick; alias alu6_lxor_execute alu6_lxor_rcl"
alias "alu6_lxor_execute" "alu6_lxor_rcl"


//*************************************************************************************
// Op selector for bit 6 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu6_op0"
//============================================================

alias "alu6_op0_in_0__0" "alias alu6_op0_output alu6_op0_out__0"
alias "alu6_op0_in_0__1" "alias alu6_op0_output alu6_op0_stage1"

alias "alu6_op0_stage1" "alu6_op0_out__0"

alias "alu6_op0_in_1__0" "alias alu6_op0_stage1 alu6_op0_out__0"
alias "alu6_op0_in_1__1" "alias alu6_op0_stage1 alu6_op0_out__1"

alias "alu6_op0_output" ""

alias "alu6_op0_out__0" "alu6_opj_in_0__0"
alias "alu6_op0_out__1" "alu6_opj_in_0__1"

alias "alu6_op0_tick" "alu6_op0_output"
alias "alu6_op0_tickrecurse" "alu_dec_and0_execute; alu6_fa_xor1_execute"
alias "alu6_op0_rcl" "alias alu6_op0_execute ; alu6_op0_tickrecurse; alu6_op0_tick; alias alu6_op0_execute alu6_op0_rcl"
alias "alu6_op0_execute" "alu6_op0_rcl"


//============================================================
// AND gate "alu6_op1"
//============================================================

alias "alu6_op1_in_0__0" "alias alu6_op1_output alu6_op1_out__0"
alias "alu6_op1_in_0__1" "alias alu6_op1_output alu6_op1_stage1"

alias "alu6_op1_stage1" "alu6_op1_out__0"

alias "alu6_op1_in_1__0" "alias alu6_op1_stage1 alu6_op1_out__0"
alias "alu6_op1_in_1__1" "alias alu6_op1_stage1 alu6_op1_out__1"

alias "alu6_op1_output" ""

alias "alu6_op1_out__0" "alu6_opj_in_1__0"
alias "alu6_op1_out__1" "alu6_opj_in_1__1"

alias "alu6_op1_tick" "alu6_op1_output"
alias "alu6_op1_tickrecurse" "alu_dec_and1_execute; alu6_land_execute"
alias "alu6_op1_rcl" "alias alu6_op1_execute ; alu6_op1_tickrecurse; alu6_op1_tick; alias alu6_op1_execute alu6_op1_rcl"
alias "alu6_op1_execute" "alu6_op1_rcl"


//============================================================
// AND gate "alu6_op2"
//============================================================

alias "alu6_op2_in_0__0" "alias alu6_op2_output alu6_op2_out__0"
alias "alu6_op2_in_0__1" "alias alu6_op2_output alu6_op2_stage1"

alias "alu6_op2_stage1" "alu6_op2_out__0"

alias "alu6_op2_in_1__0" "alias alu6_op2_stage1 alu6_op2_out__0"
alias "alu6_op2_in_1__1" "alias alu6_op2_stage1 alu6_op2_out__1"

alias "alu6_op2_output" ""

alias "alu6_op2_out__0" "alu6_opj_in_2__0"
alias "alu6_op2_out__1" "alu6_opj_in_2__1"

alias "alu6_op2_tick" "alu6_op2_output"
alias "alu6_op2_tickrecurse" "alu_dec_and2_execute; alu6_lor_execute"
alias "alu6_op2_rcl" "alias alu6_op2_execute ; alu6_op2_tickrecurse; alu6_op2_tick; alias alu6_op2_execute alu6_op2_rcl"
alias "alu6_op2_execute" "alu6_op2_rcl"


//============================================================
// AND gate "alu6_op3"
//============================================================

alias "alu6_op3_in_0__0" "alias alu6_op3_output alu6_op3_out__0"
alias "alu6_op3_in_0__1" "alias alu6_op3_output alu6_op3_stage1"

alias "alu6_op3_stage1" "alu6_op3_out__0"

alias "alu6_op3_in_1__0" "alias alu6_op3_stage1 alu6_op3_out__0"
alias "alu6_op3_in_1__1" "alias alu6_op3_stage1 alu6_op3_out__1"

alias "alu6_op3_output" ""

alias "alu6_op3_out__0" "alu6_opj_in_3__0"
alias "alu6_op3_out__1" "alu6_opj_in_3__1"

alias "alu6_op3_tick" "alu6_op3_output"
alias "alu6_op3_tickrecurse" "alu_dec_and3_execute; alu6_lxor_execute"
alias "alu6_op3_rcl" "alias alu6_op3_execute ; alu6_op3_tickrecurse; alu6_op3_tick; alias alu6_op3_execute alu6_op3_rcl"
alias "alu6_op3_execute" "alu6_op3_rcl"


//============================================================
// OR4 gate "alu6_opj"
//============================================================

alias "alu6_opj_in_0__0" "alias alu6_opj_output alu6_opj_stage1"
alias "alu6_opj_in_0__1" "alias alu6_opj_output alu6_opj_out__1"

alias "alu6_opj_stage1" "alu6_opj_out__0"

alias "alu6_opj_in_1__0" "alias alu6_opj_stage1 alu6_opj_stage2"
alias "alu6_opj_in_1__1" "alias alu6_opj_stage1 alu6_opj_out__1"

alias "alu6_opj_stage2" "alu6_opj_out__0"

alias "alu6_opj_in_2__0" "alias alu6_opj_stage2 alu6_opj_stage3"
alias "alu6_opj_in_2__1" "alias alu6_opj_stage2 alu6_opj_out__1"

alias "alu6_opj_stage3" "alu6_opj_out__0"

alias "alu6_opj_in_3__0" "alias alu6_opj_stage3 alu6_opj_out__0"
alias "alu6_opj_in_3__1" "alias alu6_opj_stage3 alu6_opj_out__1"

alias "alu6_opj_output" ""

alias "alu6_opj_out__0" "echo S[6] = 0"
alias "alu6_opj_out__1" "echo S[6] = 1"

alias "alu6_opj_tick" "alu6_opj_output"
alias "alu6_opj_tickrecurse" "alu6_op0_execute; alu6_op1_execute; alu6_op2_execute; alu6_op3_execute"
alias "alu6_opj_rcl" "alias alu6_opj_execute ; alu6_opj_tickrecurse; alu6_opj_tick; alias alu6_opj_execute alu6_opj_rcl"
alias "alu6_opj_execute" "alu6_opj_rcl"


alias "alu7_A__0" "alu7_fa_xor0_in_0__0; alu7_fa_and1_in_0__0; alu7_land_in_0__0; alu7_lor_in_0__0; alu7_lxor_in_0__0"
alias "alu7_A__1" "alu7_fa_xor0_in_0__1; alu7_fa_and1_in_0__1; alu7_land_in_0__1; alu7_lor_in_0__1; alu7_lxor_in_0__1"
alias "alu7_B__0" "alu7_fa_xor0_in_1__0; alu7_fa_and1_in_1__0; alu7_land_in_1__0; alu7_lor_in_1__0; alu7_lxor_in_1__0"
alias "alu7_B__1" "alu7_fa_xor0_in_1__1; alu7_fa_and1_in_1__1; alu7_land_in_1__1; alu7_lor_in_1__1; alu7_lxor_in_1__1"
//*************************************************************************************
// Full Adder for bit 7 (8 total)
//*************************************************************************************


//============================================================
// XOR gate "alu7_fa_xor0"
//============================================================

alias "alu7_fa_xor0_in_0__0" "alias alu7_fa_xor0_output alu7_fa_xor0_stage1"
alias "alu7_fa_xor0_in_0__1" "alias alu7_fa_xor0_output alu7_fa_xor0_stage2"

alias "alu7_fa_xor0_stage1" "alu7_fa_xor0_out__0"

alias "alu7_fa_xor0_stage2" "alu7_fa_xor0_out__1"

alias "alu7_fa_xor0_in_1__0" "alias alu7_fa_xor0_stage1 alu7_fa_xor0_out__0; alias alu7_fa_xor0_stage2 alu7_fa_xor0_out__1"
alias "alu7_fa_xor0_in_1__1" "alias alu7_fa_xor0_stage1 alu7_fa_xor0_out__1; alias alu7_fa_xor0_stage2 alu7_fa_xor0_out__0"

alias "alu7_fa_xor0_output" ""

alias "alu7_fa_xor0_out__0" "alu7_fa_xor1_in_0__0; alu7_fa_and0_in_0__0"
alias "alu7_fa_xor0_out__1" "alu7_fa_xor1_in_0__1; alu7_fa_and0_in_0__1"

alias "alu7_fa_xor0_tick" "alu7_fa_xor0_output"
alias "alu7_fa_xor0_tickrecurse" ""
alias "alu7_fa_xor0_rcl" "alias alu7_fa_xor0_execute ; alu7_fa_xor0_tickrecurse; alu7_fa_xor0_tick; alias alu7_fa_xor0_execute alu7_fa_xor0_rcl"
alias "alu7_fa_xor0_execute" "alu7_fa_xor0_rcl"


//============================================================
// XOR gate "alu7_fa_xor1"
//============================================================

alias "alu7_fa_xor1_in_0__0" "alias alu7_fa_xor1_output alu7_fa_xor1_stage1"
alias "alu7_fa_xor1_in_0__1" "alias alu7_fa_xor1_output alu7_fa_xor1_stage2"

alias "alu7_fa_xor1_stage1" "alu7_fa_xor1_out__0"

alias "alu7_fa_xor1_stage2" "alu7_fa_xor1_out__1"

alias "alu7_fa_xor1_in_1__0" "alias alu7_fa_xor1_stage1 alu7_fa_xor1_out__0; alias alu7_fa_xor1_stage2 alu7_fa_xor1_out__1"
alias "alu7_fa_xor1_in_1__1" "alias alu7_fa_xor1_stage1 alu7_fa_xor1_out__1; alias alu7_fa_xor1_stage2 alu7_fa_xor1_out__0"

alias "alu7_fa_xor1_output" ""

alias "alu7_fa_xor1_out__0" "alu7_op0_in_1__0"
alias "alu7_fa_xor1_out__1" "alu7_op0_in_1__1"

alias "alu7_fa_xor1_tick" "alu7_fa_xor1_output"
alias "alu7_fa_xor1_tickrecurse" "alu7_fa_xor0_execute; alu6_fa_or_execute"
alias "alu7_fa_xor1_rcl" "alias alu7_fa_xor1_execute ; alu7_fa_xor1_tickrecurse; alu7_fa_xor1_tick; alias alu7_fa_xor1_execute alu7_fa_xor1_rcl"
alias "alu7_fa_xor1_execute" "alu7_fa_xor1_rcl"


//============================================================
// AND gate "alu7_fa_and0"
//============================================================

alias "alu7_fa_and0_in_0__0" "alias alu7_fa_and0_output alu7_fa_and0_out__0"
alias "alu7_fa_and0_in_0__1" "alias alu7_fa_and0_output alu7_fa_and0_stage1"

alias "alu7_fa_and0_stage1" "alu7_fa_and0_out__0"

alias "alu7_fa_and0_in_1__0" "alias alu7_fa_and0_stage1 alu7_fa_and0_out__0"
alias "alu7_fa_and0_in_1__1" "alias alu7_fa_and0_stage1 alu7_fa_and0_out__1"

alias "alu7_fa_and0_output" ""

alias "alu7_fa_and0_out__0" "alu7_fa_or_in_0__0"
alias "alu7_fa_and0_out__1" "alu7_fa_or_in_0__1"

alias "alu7_fa_and0_tick" "alu7_fa_and0_output"
alias "alu7_fa_and0_tickrecurse" "alu7_fa_xor0_execute; alu6_fa_or_execute"
alias "alu7_fa_and0_rcl" "alias alu7_fa_and0_execute ; alu7_fa_and0_tickrecurse; alu7_fa_and0_tick; alias alu7_fa_and0_execute alu7_fa_and0_rcl"
alias "alu7_fa_and0_execute" "alu7_fa_and0_rcl"


//============================================================
// AND gate "alu7_fa_and1"
//============================================================

alias "alu7_fa_and1_in_0__0" "alias alu7_fa_and1_output alu7_fa_and1_out__0"
alias "alu7_fa_and1_in_0__1" "alias alu7_fa_and1_output alu7_fa_and1_stage1"

alias "alu7_fa_and1_stage1" "alu7_fa_and1_out__0"

alias "alu7_fa_and1_in_1__0" "alias alu7_fa_and1_stage1 alu7_fa_and1_out__0"
alias "alu7_fa_and1_in_1__1" "alias alu7_fa_and1_stage1 alu7_fa_and1_out__1"

alias "alu7_fa_and1_output" ""

alias "alu7_fa_and1_out__0" "alu7_fa_or_in_1__0"
alias "alu7_fa_and1_out__1" "alu7_fa_or_in_1__1"

alias "alu7_fa_and1_tick" "alu7_fa_and1_output"
alias "alu7_fa_and1_tickrecurse" ""
alias "alu7_fa_and1_rcl" "alias alu7_fa_and1_execute ; alu7_fa_and1_tickrecurse; alu7_fa_and1_tick; alias alu7_fa_and1_execute alu7_fa_and1_rcl"
alias "alu7_fa_and1_execute" "alu7_fa_and1_rcl"


//============================================================
// OR gate "alu7_fa_or"
//============================================================

alias "alu7_fa_or_in_0__0" "alias alu7_fa_or_output alu7_fa_or_stage1"
alias "alu7_fa_or_in_0__1" "alias alu7_fa_or_output alu7_fa_or_out__1"

alias "alu7_fa_or_stage1" "alu7_fa_or_out__0"

alias "alu7_fa_or_in_1__0" "alias alu7_fa_or_stage1 alu7_fa_or_out__0"
alias "alu7_fa_or_in_1__1" "alias alu7_fa_or_stage1 alu7_fa_or_out__1"

alias "alu7_fa_or_output" ""

alias "alu7_fa_or_out__0" "echo Carry = 0"
alias "alu7_fa_or_out__1" "echo Carry = 1"

alias "alu7_fa_or_tick" "alu7_fa_or_output"
alias "alu7_fa_or_tickrecurse" "alu7_fa_and0_execute; alu7_fa_and1_execute"
alias "alu7_fa_or_rcl" "alias alu7_fa_or_execute ; alu7_fa_or_tickrecurse; alu7_fa_or_tick; alias alu7_fa_or_execute alu7_fa_or_rcl"
alias "alu7_fa_or_execute" "alu7_fa_or_rcl"


//*************************************************************************************
// Logic unit for bit 7 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu7_land"
//============================================================

alias "alu7_land_in_0__0" "alias alu7_land_output alu7_land_out__0"
alias "alu7_land_in_0__1" "alias alu7_land_output alu7_land_stage1"

alias "alu7_land_stage1" "alu7_land_out__0"

alias "alu7_land_in_1__0" "alias alu7_land_stage1 alu7_land_out__0"
alias "alu7_land_in_1__1" "alias alu7_land_stage1 alu7_land_out__1"

alias "alu7_land_output" ""

alias "alu7_land_out__0" "alu7_op1_in_1__0"
alias "alu7_land_out__1" "alu7_op1_in_1__1"

alias "alu7_land_tick" "alu7_land_output"
alias "alu7_land_tickrecurse" ""
alias "alu7_land_rcl" "alias alu7_land_execute ; alu7_land_tickrecurse; alu7_land_tick; alias alu7_land_execute alu7_land_rcl"
alias "alu7_land_execute" "alu7_land_rcl"


//============================================================
// OR gate "alu7_lor"
//============================================================

alias "alu7_lor_in_0__0" "alias alu7_lor_output alu7_lor_stage1"
alias "alu7_lor_in_0__1" "alias alu7_lor_output alu7_lor_out__1"

alias "alu7_lor_stage1" "alu7_lor_out__0"

alias "alu7_lor_in_1__0" "alias alu7_lor_stage1 alu7_lor_out__0"
alias "alu7_lor_in_1__1" "alias alu7_lor_stage1 alu7_lor_out__1"

alias "alu7_lor_output" ""

alias "alu7_lor_out__0" "alu7_op2_in_1__0"
alias "alu7_lor_out__1" "alu7_op2_in_1__1"

alias "alu7_lor_tick" "alu7_lor_output"
alias "alu7_lor_tickrecurse" ""
alias "alu7_lor_rcl" "alias alu7_lor_execute ; alu7_lor_tickrecurse; alu7_lor_tick; alias alu7_lor_execute alu7_lor_rcl"
alias "alu7_lor_execute" "alu7_lor_rcl"


//============================================================
// XOR gate "alu7_lxor"
//============================================================

alias "alu7_lxor_in_0__0" "alias alu7_lxor_output alu7_lxor_stage1"
alias "alu7_lxor_in_0__1" "alias alu7_lxor_output alu7_lxor_stage2"

alias "alu7_lxor_stage1" "alu7_lxor_out__0"

alias "alu7_lxor_stage2" "alu7_lxor_out__1"

alias "alu7_lxor_in_1__0" "alias alu7_lxor_stage1 alu7_lxor_out__0; alias alu7_lxor_stage2 alu7_lxor_out__1"
alias "alu7_lxor_in_1__1" "alias alu7_lxor_stage1 alu7_lxor_out__1; alias alu7_lxor_stage2 alu7_lxor_out__0"

alias "alu7_lxor_output" ""

alias "alu7_lxor_out__0" "alu7_op3_in_1__0"
alias "alu7_lxor_out__1" "alu7_op3_in_1__1"

alias "alu7_lxor_tick" "alu7_lxor_output"
alias "alu7_lxor_tickrecurse" ""
alias "alu7_lxor_rcl" "alias alu7_lxor_execute ; alu7_lxor_tickrecurse; alu7_lxor_tick; alias alu7_lxor_execute alu7_lxor_rcl"
alias "alu7_lxor_execute" "alu7_lxor_rcl"


//*************************************************************************************
// Op selector for bit 7 (8 total)
//*************************************************************************************


//============================================================
// AND gate "alu7_op0"
//============================================================

alias "alu7_op0_in_0__0" "alias alu7_op0_output alu7_op0_out__0"
alias "alu7_op0_in_0__1" "alias alu7_op0_output alu7_op0_stage1"

alias "alu7_op0_stage1" "alu7_op0_out__0"

alias "alu7_op0_in_1__0" "alias alu7_op0_stage1 alu7_op0_out__0"
alias "alu7_op0_in_1__1" "alias alu7_op0_stage1 alu7_op0_out__1"

alias "alu7_op0_output" ""

alias "alu7_op0_out__0" "alu7_opj_in_0__0"
alias "alu7_op0_out__1" "alu7_opj_in_0__1"

alias "alu7_op0_tick" "alu7_op0_output"
alias "alu7_op0_tickrecurse" "alu_dec_and0_execute; alu7_fa_xor1_execute"
alias "alu7_op0_rcl" "alias alu7_op0_execute ; alu7_op0_tickrecurse; alu7_op0_tick; alias alu7_op0_execute alu7_op0_rcl"
alias "alu7_op0_execute" "alu7_op0_rcl"


//============================================================
// AND gate "alu7_op1"
//============================================================

alias "alu7_op1_in_0__0" "alias alu7_op1_output alu7_op1_out__0"
alias "alu7_op1_in_0__1" "alias alu7_op1_output alu7_op1_stage1"

alias "alu7_op1_stage1" "alu7_op1_out__0"

alias "alu7_op1_in_1__0" "alias alu7_op1_stage1 alu7_op1_out__0"
alias "alu7_op1_in_1__1" "alias alu7_op1_stage1 alu7_op1_out__1"

alias "alu7_op1_output" ""

alias "alu7_op1_out__0" "alu7_opj_in_1__0"
alias "alu7_op1_out__1" "alu7_opj_in_1__1"

alias "alu7_op1_tick" "alu7_op1_output"
alias "alu7_op1_tickrecurse" "alu_dec_and1_execute; alu7_land_execute"
alias "alu7_op1_rcl" "alias alu7_op1_execute ; alu7_op1_tickrecurse; alu7_op1_tick; alias alu7_op1_execute alu7_op1_rcl"
alias "alu7_op1_execute" "alu7_op1_rcl"


//============================================================
// AND gate "alu7_op2"
//============================================================

alias "alu7_op2_in_0__0" "alias alu7_op2_output alu7_op2_out__0"
alias "alu7_op2_in_0__1" "alias alu7_op2_output alu7_op2_stage1"

alias "alu7_op2_stage1" "alu7_op2_out__0"

alias "alu7_op2_in_1__0" "alias alu7_op2_stage1 alu7_op2_out__0"
alias "alu7_op2_in_1__1" "alias alu7_op2_stage1 alu7_op2_out__1"

alias "alu7_op2_output" ""

alias "alu7_op2_out__0" "alu7_opj_in_2__0"
alias "alu7_op2_out__1" "alu7_opj_in_2__1"

alias "alu7_op2_tick" "alu7_op2_output"
alias "alu7_op2_tickrecurse" "alu_dec_and2_execute; alu7_lor_execute"
alias "alu7_op2_rcl" "alias alu7_op2_execute ; alu7_op2_tickrecurse; alu7_op2_tick; alias alu7_op2_execute alu7_op2_rcl"
alias "alu7_op2_execute" "alu7_op2_rcl"


//============================================================
// AND gate "alu7_op3"
//============================================================

alias "alu7_op3_in_0__0" "alias alu7_op3_output alu7_op3_out__0"
alias "alu7_op3_in_0__1" "alias alu7_op3_output alu7_op3_stage1"

alias "alu7_op3_stage1" "alu7_op3_out__0"

alias "alu7_op3_in_1__0" "alias alu7_op3_stage1 alu7_op3_out__0"
alias "alu7_op3_in_1__1" "alias alu7_op3_stage1 alu7_op3_out__1"

alias "alu7_op3_output" ""

alias "alu7_op3_out__0" "alu7_opj_in_3__0"
alias "alu7_op3_out__1" "alu7_opj_in_3__1"

alias "alu7_op3_tick" "alu7_op3_output"
alias "alu7_op3_tickrecurse" "alu_dec_and3_execute; alu7_lxor_execute"
alias "alu7_op3_rcl" "alias alu7_op3_execute ; alu7_op3_tickrecurse; alu7_op3_tick; alias alu7_op3_execute alu7_op3_rcl"
alias "alu7_op3_execute" "alu7_op3_rcl"


//============================================================
// OR4 gate "alu7_opj"
//============================================================

alias "alu7_opj_in_0__0" "alias alu7_opj_output alu7_opj_stage1"
alias "alu7_opj_in_0__1" "alias alu7_opj_output alu7_opj_out__1"

alias "alu7_opj_stage1" "alu7_opj_out__0"

alias "alu7_opj_in_1__0" "alias alu7_opj_stage1 alu7_opj_stage2"
alias "alu7_opj_in_1__1" "alias alu7_opj_stage1 alu7_opj_out__1"

alias "alu7_opj_stage2" "alu7_opj_out__0"

alias "alu7_opj_in_2__0" "alias alu7_opj_stage2 alu7_opj_stage3"
alias "alu7_opj_in_2__1" "alias alu7_opj_stage2 alu7_opj_out__1"

alias "alu7_opj_stage3" "alu7_opj_out__0"

alias "alu7_opj_in_3__0" "alias alu7_opj_stage3 alu7_opj_out__0"
alias "alu7_opj_in_3__1" "alias alu7_opj_stage3 alu7_opj_out__1"

alias "alu7_opj_output" ""

alias "alu7_opj_out__0" "echo S[7] = 0"
alias "alu7_opj_out__1" "echo S[7] = 1"

alias "alu7_opj_tick" "alu7_opj_output"
alias "alu7_opj_tickrecurse" "alu7_op0_execute; alu7_op1_execute; alu7_op2_execute; alu7_op3_execute"
alias "alu7_opj_rcl" "alias alu7_opj_execute ; alu7_opj_tickrecurse; alu7_opj_tick; alias alu7_opj_execute alu7_opj_rcl"
alias "alu7_opj_execute" "alu7_opj_rcl"







alias "calc" "alu0_opj_execute; alu1_opj_execute; alu2_opj_execute; alu3_opj_execute; alu4_opj_execute; alu5_opj_execute; alu6_opj_execute; alu7_opj_execute"
alias "getcarry" "alu7_fa_or_execute"


echo ""
echo Testing addition
echo ==================

alu0_A__0
alu1_A__1
alu2_A__0
alu3_A__1
alu4_A__1
alu5_A__0
alu6_A__1
alu7_A__1

alu0_B__1
alu1_B__0
alu2_B__1
alu3_B__1
alu4_B__0
alu5_B__0
alu6_B__0
alu7_B__1

// op add
alu_OP0__0
alu_OP1__0

calc
getcarry


echo ""
echo Testing AND
echo =============

alu0_A__0
alu1_A__0
alu2_A__0
alu3_A__0
alu4_A__1
alu5_A__1
alu6_A__1
alu7_A__1

alu0_B__0
alu1_B__0
alu2_B__1
alu3_B__1
alu4_B__0
alu5_B__0
alu6_B__1
alu7_B__1


// op and
alu_OP0__1
alu_OP1__0

calc

echo ""
echo Testing OR
echo ============

// op OR
alu_OP0__0
alu_OP1__1

calc

echo ""
echo Testing XOR
echo =============

// op XOR
alu_OP0__1
alu_OP1__1

calc
